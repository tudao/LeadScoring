<apex:component controller="geopointe.Map_Controller" extensions="geopointe.FieldSelector,geopointe.Route,geopointe.DataSet,geopointe.Localization" allowDML="true">
	
	<!-- CSS -->
    <!-- <apex:stylesheet value="{!URLFOR($Resource.jquery, '/DataTables/media/css/demo_table.css')}"/> jQuery DataTable css --> <!-- added styles to mapCSS instead -->
    <apex:stylesheet value="https://fonts.googleapis.com/css?family=Open+Sans:400,600,700"/> <!-- open sans font -->
    <apex:stylesheet value="{!URLFOR($Resource.geopointe__jquery, '/jgrowl/jquery.jgrowl.css')}"/> <!-- jGrowl css -->
    <apex:stylesheet value="{!URLFOR($Resource.geopointe__jquery, '/ui/css/smoothness/jquery-ui-1.9.2.custom.min.css')}"/> <!--jQuery UI-->
    <apex:stylesheet value="{!URLFOR($Resource.geopointe__jquery, '/fieldSelector/css/fieldselector.css')}"/> <!-- FieldSelector plugin CSS -->
    <apex:stylesheet value="{!URLFOR($Resource.geopointe__jquery, '/plugins/minicolor/jquery.minicolors.css')}"/> <!-- Color picker plugin CSS -->
    <apex:stylesheet value="{!URLFOR($Resource.geopointe__jquery, '/js/lib/select2/select2.css')}"/> <!-- Select2 CSS -->
    <apex:stylesheet value="{!URLFOR($Resource.geopointe__jquery, '/lib/maki/maki-sprite.css')}"/> <!-- Maki icon css -->
    <apex:stylesheet value="{!URLFOR($Resource.geopointe__jquery, '/css/common/common.css')}"/> <!-- Common geopointe CSS -->    
    <apex:stylesheet value="{!$Resource.geopointe__mapCSS}"/> <!-- our custom css. overrides the above -->
    <link rel="stylesheet" type="text/css" href="{!$Resource.printCSS}" media="print"/> <!-- print css. Not using the apex:styleSheet b/c can't say media="print" with it -->    
    
    <!--Dynamic style -->
    <style type="text/css">
        .mainForm{
            margin: {!IF(userSettings.Hide_Sidebar__c,'-10px','-5px')} -10px 0px -10px;
        }
    </style>

    <!--[if IE 8]>
        <style>
            .mainForm{
                margin: {!IF(userSettings.Hide_Sidebar__c,'-13px','-8px')} -10px 0px -10px;
            }
        </style>
    <![endif]-->

    <!-- Dynamic script that need to be populated before other scripts run -->
    <script type="text/javascript">
        gp_userSettings = new Object();
        gp_userSettings.settings__c = {!userSettingsJSON};
        gp_userSettings.userInfo = {!userInfoJSON};
        gp_userSettings.sessionId = '{!GETSESSIONID()}';
        gp_userSettings.layouts = new Object();
    </script>

    <!-- Scripts -->
    
    <script src="{!URLFOR($Page.translations)}"></script> <!-- Geopointe translations -->
    <script src="{!URLFOR($Resource.jquery, '/js/lib/es5-shim.min.js')}"></script> <!-- Legacy browser support, required for IE8 angular ui date picker -->
    <script src="{!URLFOR($Resource.jquery, '/jquery-1.8.3.min.js')}"></script> <!-- core jQuery -->
    <script src="{!URLFOR($Resource.jquery, '/ui/js/jquery-ui-1.9.2.custom.min.js')}"></script> <!-- jQuery UI -->
    <script src="{!URLFOR($Resource.jquery, '/js/lib/jquery.ui.touch-punch.min.js')}"></script> <!-- Touch for jQuery UI -->
    <script src="{!URLFOR($Resource.jquery, '/DataTables/media/js/jquery.dataTables.min.js')}"></script> <!-- jQuery Data Tables-->
    <script src="{!URLFOR($Resource.jquery, '/jgrowl/jquery.jgrowl_minimized.js')}"></script> <!-- jGrowl -->
    <script src="{!URLFOR($Resource.jquery, '/MD5/jquery.md5-min.js')}"></script> <!-- jQuery MD5 -->
    <script src="{!URLFOR($Resource.jquery, '/tooltip/jquery.tooltip.min.js')}"></script> <!-- jQuery Tooltip -->
    <script src="{!URLFOR($Resource.jquery, '/mixpanel/mixpanel.js')}"></script><!-- Mix Panel -->
    <script src="{!URLFOR($Resource.jquery, '/plugins/minicolor/jquery.minicolors.js')}"></script> <!-- Color Picker -->
    <script src="{!URLFOR($Resource.jquery, '/fieldSelector/jquery.fieldselector.js')}"></script> <!-- fieldSelector plugin -->
    <script src="{!URLFOR($Resource.jquery, '/js/data-set-filters.js')}"></script><!-- Data Set Filters script -->
    <script src="{!URLFOR($Resource.jquery, '/json2.js')}"></script> <!-- JSON.stringify support for IE -->
    <script src="{!URLFOR($Resource.jquery, '/js/common.js')}"></script> <!-- Generic JS use across entire app -->
    <script src="{!URLFOR($Resource.jquery, '/plugins/highcharts/highcharts.js')}"></script> <!-- Highcharts charting library -->
    <script src="{!URLFOR($Resource.jquery, '/js/lib/async.js')}"></script> <!-- async.js for help with asynchronous flow control -->
    <script src="{!URLFOR($Resource.jquery, '/js/lib/select2/select2.js')}"></script> <!-- select2 plugin -->
    <script src="{!URLFOR($Resource.jquery, '/js/lib/angular/angular.min.js')}"></script> <!-- Angular -->
    <script src="{!URLFOR($Resource.jquery, '/js/lib/angular/lib/ui.sortable.min.js')}"></script> <!-- Angular jQuery UI sortable-->
    <script src="{!URLFOR($Resource.jquery, '/js/lib/angular/lib/date.js')}"></script> <!-- Angular jQuery UI date picker-->
    <script src="{!URLFOR($Resource.jquery, '/js/lib/moment/moment.min.js')}"></script> <!-- Moment.js for time formatting -->
    <script src="{!URLFOR($Resource.jquery, '/js/lib/moment/moment-timezone.min.js')}"></script> <!-- Moment.js timezone functionality -->
    <script src="{!URLFOR($Resource.jquery, '/js/lib/moment/moment-timezone-data.js')}"></script> <!-- Moment.js timezone data -->
    <script src="{!URLFOR($Resource.jquery, '/js/lib/moment/lang/'& momentJSLangForCurrentUser &'.js')}"></script> <!-- Moment.js language file -->
    <script src="{!URLFOR($Resource.jquery, '/js/lib/angular/lib/angular-moment.min.js')}"></script> <!-- Angular Moment.js-->
    <script src="{!URLFOR($Resource.jquery, '/js/lib/angular/lib/select2.js')}"></script> <!-- Angular select2-->
    <script src="{!URLFOR($Resource.jquery, '/lib/maki/maki.js')}"></script> <!-- Maki image metadata-->
    <script src="/soap/ajax/25.0/connection.js"></script> <!-- Salesforce AJAX API -->
    <script src="{!$Resource.GeopointeJS}"></script> <!-- Geopointe universal functions -->

    <apex:outputPanel rendered="{!mapProvider == 'Google'}">
        <script src="{!googJSsrc}"></script> <!-- Google JavaScript API -->
    </apex:outputPanel>

    <script src="{!URLFOR($Resource.jquery, '/js/geopointeApp.js')}"></script> <!-- Starts the Angular geopointe app -->
    <script src="{!URLFOR($Resource.jquery, '/js/map.js')}"></script> <!-- Map page specific JS -->
    <script src="{!URLFOR($Resource.jquery, '/js/map.charts.js')}"></script> <!-- Map page specific JS for charting -->
    <script src="{!URLFOR($Resource.jquery, '/js/map.actions.js')}"></script> <!-- Map page specific JS for actions functionality -->
    <script src="{!URLFOR($Resource.jquery, '/js/routeController.js')}"></script> <!-- Contains Angular controller for route functionality -->
    <script src="{!URLFOR($Resource.jquery, '/js/dataSetController.js')}"></script> <!-- Contains Angular controller for Data Set functionality -->
    <script src="{!URLFOR($Resource.jquery, '/js/legendController.js')}"></script> <!-- Contains Angular controller for Legend functionality -->

    <!-- Google Maps API -->
    <apex:outputPanel rendered="{!mapProvider='Google'}">
        
        <!-- Geopointe Google functions -->
        <script src="{!$Resource.GeopointeJS_goog}" ></script>
        
        <!-- Google API + Plugins -->
        <script src="{!URLFOR($Resource.jquery, '/goog/keydragzoom_packed.js')}"></script> <!-- Key Drag Zoom -->
        <script src="{!URLFOR($Resource.jquery, '/goog/infobox_packed.js')}"></script> <!-- Info Box -->
        
    </apex:outputPanel>
    
    <!-- MapQuest API -->
    <apex:outputPanel rendered="{!mapProvider='MapQuest'}">
        
        <!-- Geopointe MapQuest functions -->
        <script src="{!$Resource.GeopointeJS_mq}"></script>
        
        <!-- MapQuest API -->
        <script src="{!mqJSsrc}"></script>

        <style>
            #settingsAndHelp {
                right: 252px;
                top: 11px;
            }
        </style>
    </apex:outputPanel>
    
    <!-- IE9 flag -->
    <!--[if IE 9]>
        <script type="text/javascript">
            var isIE9 = true;
        </script>
    <![endif]-->

    <!-- IE8 drop shadow support -->
    <!--[if IE 8]>
        <script type="text/javascript">
            var isIE8 = true;
        </script> 
        <style>
            #drawToolBtnGroup{
                height: 28px;
                width: 126px;
            }
            #drawToolBtnGroup input{
                height: 28px;
                width: 60px;
            }
            #drawPolygon {
                background-image: url('img/pencil-dark.png');
            }
            #drawPolygon.gp-btn-selected {
                background-image: url('img/pencil-light.png');
            }
            #drawHand {
                background-image: url('img/hand-light.png');
            }
            #drawHand.gp-btn-selected {
                background-image: url('img/hand-dark.png');
            }
        </style>
    <![endif]-->

    <!-- IE7 / IE8 compatibility mode css fixes -->
    <!--[if IE 7]>
        <script type="text/javascript">
            var isIE7 = true;
        </script> 

        <style>
            #messageBanner {
                width: 600px;
            }
            #FiltersDIVOuter{
                width: 730px;
            }
            #filterCountBubble{
                display: none;
            }
            #dataSetPanel{
                width: 800px;
            }
            .scrollableTableWrapper{
                overflow-x: hidden;
            }
            .mapControlContent{
                border: 2px solid #86a3b5;
                border-top: none;
            }
            .mapControlTab{
                border: 1px solid #b6c7d2;
                border-top: none;
                margin-top: -1px;
            }
            .mapTabSelected{
                border: 2px solid #86a3b5;
                border-top: none;
                margin-top: -2px;
            }
            .multiButtonContent{
                border: 2px solid #797676;
            }
            .searchSeperator{
                margin-bottom: -10px;
            }
            #gp_dataTableTabs {
                margin-top: -6px;
            }
            #gp_dataTableTabs .ui-tabs-nav {
                padding-left: 12px;
                padding-right: 0px;
            }
            #radialSearchOptions{
                width: 270px;
            }
        </style>   
    <![endif]-->
    
    <!-- JavaScript merge variables -->
    <script type="text/javascript">
        //Set timeout for all remoting call to 120 seconds, can be overrided on per call basis
        Visualforce.remoting.timeout = 120000; 

        var gpImg = {
            center_pin2: '{!URLFOR($Resource.images, "center_pin2.png")}',
            addToRoute: '{!URLFOR($Resource.images, "addToRoute.gif")}',
            datatable_delete: '{!URLFOR($Resource.images, "datatable_delete.gif")}',
            loading: '{!URLFOR($Resource.images, "loading.gif")}',
            checkbox_checked: '{!URLFOR($Resource.images, "checkbox_checked.gif")}',
            checkbox_unchecked: '{!URLFOR($Resource.images, "checkbox_unchecked.gif")}',
            confirm12: '{!URLFOR($Resource.images, "confirm12.png")}',
            warning12: '{!URLFOR($Resource.images, "warning12.png")}',
            error12: '{!URLFOR($Resource.images, "error12.png")}',
            moveTop: '{!URLFOR($Resource.images, "moveTop.png")}',
            moveBottom: '{!URLFOR($Resource.images, "moveBottom.png")}',
            moveUp: '{!URLFOR($Resource.images, "moveUp.png")}',
            moveDown: '{!URLFOR($Resource.images, "moveDown.png")}',
            datatable_delete: '{!URLFOR($Resource.images, "datatable_delete.gif")}',
            link_newwindow: '{!URLFOR($Resource.images, "link_newwindow.gif" )}',
            elbow: '{!URLFOR($Resource.images, "elbow.gif" )}',
            blackX: '{!URLFOR($Resource.images, "map/blackX.png" )}',
            gp_checkbox_checked: '{!URLFOR($Resource.jquery, "css/common/img/checkbox-checked.png")}',
            gp_checkbox_unchecked: '{!URLFOR($Resource.jquery, "css/common/img/checkbox-unchecked.png")}'
        };

        var minZoomLevelForBoundsSearch = '{!minZoomLevelForBoundsSearch}';
        var nameSpacePrefix = '{!orgFieldPrefix}';
        var mapProviderOffsetLeft = {!IF( mapProvider="Google",12,12)};
        var mapProviderOffsetRight = {!IF( mapProvider="Google",98,254)};  
        var searchPinURL = '{!URLFOR($Resource.images, "map/searchPin.png")}';
        var directionsURL = '{!URLFOR($Resource.images, "map/routes2x.png")}';
        var blackXiconURL = '{!URLFOR($Resource.images, "blackX24.png")}';
        var blackPlusIconURL = '{!URLFOR($Resource.images, "blackplus24.png")}';
        var redCheckIconURL = '{!URLFOR($Resource.images, "map/redCheck.png")}';
        var mapProvider = '{!mapProvider}';
        var loadWithCenterPOI = {!NOT(ISNULL(centerPOI))};
        var writeBackEnabled = {!writeBackEnabled};
        var writeBackLookupObject = '{!JSENCODE(writeBackLookupObject)}';
        var writeBackButtonText = '{!JSENCODE(writeBackButtonText)}';
        var isGeopointeAdmin = {!isGeopointeAdmin};
        var googJSsrc = '{!googJSsrc}';
        var hasPaidLicense = {!hasPaidLicense};
        var addAllToRouteOnLoad = {!addAllToRouteOnLoad};

        /*Charting images */
        var chartIconURL = '{!URLFOR($Resource.images, "map/chart/chart.png")}';
        var heatMapIconURL = '{!URLFOR($Resource.images, "map/fire1.png")}';
        var heatIntensityLowIconURL = '{!URLFOR($Resource.images, "map/heatIntensityLow.png")}';
        var heatIntensityHighIconURL = '{!URLFOR($Resource.images, "map/heatIntensityHigh.png")}';
        var showHidePinsIconURL = '{!URLFOR($Resource.images, "map/dataset2x.png")}';
        var barChartPlainURL = '{!URLFOR($Resource.images, "map/chart/basic_bar.png")}';
        var columnChartPlainURL = '{!URLFOR($Resource.images, "map/chart/basic_column.png")}';
        var pieChartPlainURL = '{!URLFOR($Resource.images, "map/chart/basic_pie.png")}';
        var barStackNoneURL = '{!URLFOR($Resource.images, "map/chart/bar_1.png")}';
        var barStackNormalURL = '{!URLFOR($Resource.images, "map/chart/bar_2.png")}';
        var barStackPercentURL = '{!URLFOR($Resource.images, "map/chart/bar_3.png")}';
        var columnStackNoneURL = '{!URLFOR($Resource.images, "map/chart/column_1.png")}';
        var columnStackNormalURL = '{!URLFOR($Resource.images, "map/chart/column_2.png")}';
        var columnStackPercentURL = '{!URLFOR($Resource.images, "map/chart/column_3.png")}';

        gp_orgSettings = new Object();
            gp_orgSettings.settings__c = {!orgSettingsJSON};
            gp_orgSettings.clientId = 'Arrowpointe/Geopointe/';
            gp_orgSettings.fieldPrefix = '{!orgFieldPrefix}';
            gp_orgSettings.folderPrefix = '{!orgFolderPrefix}';
            gp_orgSettings.managed = {!orgManaged}; 
            gp_orgSettings.urlPrefix = '{!$Site.Prefix}';

        //Array of actions
        var gp_actions = convertActionsToObject( {!actionsJSON} );

        //Populate the gp_layers object
        if(mapProvider == 'Google'){
            gp_initLayerObject({!layersJSON});
        }

    	//Merge values
    	var searchRecordsRemoteMethodName = '{!$RemoteAction.Map_Controller.searchRecordsRemote}';
        var saveShapeRemoteMethodName = '{!$RemoteAction.Map_Controller.saveShape}';
        var getShapeLatLngRemoteMethodName = '{!$RemoteAction.Map_Controller.getShapeLatLng}';
        var deleteShapeRemoteMethodName = '{!$RemoteAction.Map_Controller.deleteShape}';
        var executeApexActionRemoteMethodName = '{!$RemoteAction.Map_Controller.executeApexAction}';

        var gp_startingDataSet = '{!JSENCODE(activeDataSet)}';
        

    	<!-- Needs to be at top so inline script that gets rerendered can see this mehtod exists -->
    	function populateFilterJSON(){
			//------Build the JSON for the filters------
			var filtersJSON = convertFilterTableToJSON();
			
			//Add JSON to hidden inputText that will get posted back to controller on save
			jQuery(".dataSetFiltersJSON").val(filtersJSON);

            //------Build the JSON for the child filters------
            var childFiltersJSON = convertChildFilterTableToJSON();
            
            //Add JSON to hidden inputText that will get psoted back to conroller on save
            jQuery(".dataSetChildFiltersJSON").val(childFiltersJSON);
						
			return true;
		}
    </script>
    
    <script src="{!$Page.js_GA}"></script> <!-- Google Analytics --> 
    
    <!-- Mapping Provider Geopointe scripts are included at the end of page since they are not in the <head> area -->

    <style type="text/css">
        #shadow-div{
            margin-right:20px; /* Set to 0 if you don't want shadow at the right side */
            margin-left:0px; /* Set to 20px if you want shadow at the left side */
            margin-top:0px; /* Set to 20px if you want shadow at the top side */
            margin-bottom:20px; /* Set to 20px if you want shadow at the bottom side */
            box-shadow: 0px 0px 20px black; 
            height:100px;
            width:100px;
            background: red;
        }

        #anti-shadow-div{
            display:table;
            overflow:hidden;
        }
    </style>
    
    <apex:pageMessages id="pageMessages"></apex:pageMessages>
    <div id="pageMessagesRemote"></div> 
    
    <div id="ngApp" ng-app="GeopointeApp">
    <apex:form onsubmit="javascript: if(gp_stopSubmit){gp_stopSubmit=false; return false;}" styleClass="mainForm" id="mainForm">
    
        <apex:outputPanel id="wrapperDIV" layout="block" styleClass="gp_wrapper" rendered="{!initSuccess}">

        	<div id="mapWrapper">
				<!-- Right click map context menu -->
                <div id="mapContextMenu" oncontextmenu="return false;">
                    <div class="mapContextMenuItem" onclick="gp_searchRadialRemoteRightClick();">
                        {!$Label.Search_Nearby} {!LOWER($Label.Here)}
                        <div class="mapContextMenuItemSubItem"><span id="rightClickDataSetName">{!activeDataSetName}</span> - <span id="rigthClickRange">{!searchNearbyRange}</span> <span id="rightClickUnits">{!IF(searchNearbyUnit == 'miles',$Label.Miles,$Label.Kilometers)}</span></div>
                    </div>
                    <div class="mapContextMenuItem" onclick="gp_addToRouteRightClick();">{!$Label.Add_to_Route}</div>
                    <div class="mapContextMenuItem" onclick="gp_addToMyLocationsRightClick();">{!$Label.Save_to_My_Locations}</div>
                    <hr/>
                    <div class="mapContextMenuItem" onclick="gp_centerRightClick();">{!$Label.Center_Map}</div>
                    <div class="mapContextMenuItem" onclick="gp_centerZoomRightClick();">{!$Label.Center_and_Zoom_Map}</div>
                    <div class="mapContextMenuItem mapContextMenuItemGoogleOnly" onclick="gp_streetViewRightClick();">{!$Label.Street_View}</div>
                    <div class="mapContextMenuItem" onclick="gp_bestFitRightClick();">{!$Label.Show_All_Mapped_Points}</div>
                </div>

                <!--Settings and Help Icons-->
                <div id="settingsAndHelp">
                    <img src="{!URLFOR($Resource.images, 'map/settingsBlack.png')}" title="{!$Label.Settings}" id="settingsIconBlack" onclick="openMapSettings();"/>
                    <img src="{!URLFOR($Resource.images, 'map/settingsWhite.png')}" title="{!$Label.Settings}" id="settingsIconWhite" style="display:none;" onclick="openMapSettings();"/>

                    <img src="{!URLFOR($Resource.images, 'map/helpCircleBlack.png')}" title="{!$Label.Help}" id="helpIconBlack" onclick="openMapHelp();" />
                    <img src="{!URLFOR($Resource.images, 'map/helpCircleWhite.png')}" title="{!$Label.Help}" id="helpIconWhite" style="display:none;" onclick="openMapHelp();"/>
                </div>

                <!--Data Sets Map Control -->
				<div class="mapControl dataSetController" name="datasets" id="dataSetPanel" ng-controller="DataSetController">
					<div class="mapControlContent" id="searchControl">									                        
                        
                        <!-- Save confirmation dialog box -->
                        <div id="dataSetSaveConfirm" style="display:none;">
                            <div class="gp-modal-content confirmContent">
                                <span ng-if="saveType == 'save'">
                                    This will <strong>Save</strong> and overwrite the selected Data Set with the current filters, fields, markers, and other settings.
                                </span>
                                <span ng-if="saveType == 'saveAs'">
                                    This will <strong>Save As</strong> and create a new Data Set with the current filters, fields, markers, and other settings. 

                                    <table cellpadding="0" cellspacing="0" class="gp-inputTable">
                                        <tr>
                                            <td class="labelCol">{!$Label.Data_Set_Name}</td>
                                            <td class="inputCol">
                                                <input type="text" class="gp-input" ng-model="selectedDataSet.saveAsName" style="width: 255px;" />
                                            </td>
                                        </tr>
                                    </table>

                                </span>
                            </div>
                            <div class="gp-modal-footer">
                                <input type="button" class="gp-btn btn-lg dataSetEditButtonRight" value="{!$Label.Close}" ng-click="selectedDataSet.saveAsName = ''" onclick="jQuery(this).closest('.ui-dialog-content').dialog('close');"/>
                                <input type="button" class="gp-btn btn-lg btn-primary dataSetEditButtonRight" value="{!$Label.Save_As}" ng-if="saveType == 'saveAs'" ng-click="saveDataSet(true)"/>
                                <input type="button" class="gp-btn btn-lg btn-primary dataSetEditButtonRight" value="{!$Label.Save}" ng-if="saveType == 'save'" ng-click="saveDataSet(false)"/>
                                <div class="clear"/>
                            </div>
                        </div>

                        <!-- Delete Data Set confirmation box -->
                        <div id="dataSetDeleteConfirm" style="display:none;">
                            <div class="gp-modal-content confirmContent">
                                This will <strong>DELETE</strong> the <strong>{{selectedDataSet.dataSetName}}</strong> Data Set. This action is not reversible.    
                            </div>
                            <div class="gp-modal-footer">
                                <input type="button" class="gp-btn btn-lg dataSetEditButtonRight" value="{!$Label.Close}" onclick="jQuery(this).closest('.ui-dialog-content').dialog('close');"/>
                                <input type="button" class="gp-btn btn-lg btn-danger dataSetEditButtonRight" value="{!$Label.Delete}" ng-click="deleteDataSet(selectedDataSet.name)"/>
                                <div class="clear"/>
                            </div>
                        </div>

                        <!-- Edit Data Set modal dialog box -->
                        <div id="dataSetEditModal" style="display:none;" class="editDataSetDialog">
                            <div class="gp-modal-content">
                                <div id="dataSetEditName">
                                    <strong>Data Set Name  </strong><input type="text" class="gp-input input-lg" ng-model="selectedDataSet.saveName" size="40"/>
                                </div>

                                <div class="flat-tabs">
                                    <span class="tab" ng-class="{active: dataSetEditTab == 'filters'}" ng-click="dataSetEditTab='filters'">Filters</span>
                                    <span class="tab" ng-class="{active: dataSetEditTab == 'fields'}" ng-click="dataSetEditTab='fields'">Fields</span>
                                    <span class="tab" ng-class="{active: dataSetEditTab == 'markers'}" ng-click="dataSetEditTab='markers'">Markers</span>
                                    <span class="tab" ng-class="{active: dataSetEditTab == 'other'}" ng-click="dataSetEditTab='other'">Other</span>
                                </div>

                                <!--Data Set Filters -->
                                <div id="dataSetEditFilters" class="flat-tab-content" ng-show="dataSetEditTab == 'filters'">
                                    
                                    <div class="showFilterWrapper">
                                        <strong>Show </strong><select ng-model="selectedDataSet.showFilter" ng-options="o.value as o.label for o in selectedDataSet.showFilters"></select>
                                    </div>

                                    <div ng-if="!selectedDataSet.userHasAccessToAllFilters">
                                        You do not have permission to edit filters on this Data Set due to Object or Field Level Security restrictions.<br/><br/>
                                        Contact your system administrator to resolve this issue. 
                                    </div> 

                                    <div ng-if="selectedDataSet.userHasAccessToAllFilters">

                                        <!-- Field Filters -->
                                        <div class="editDataSetSectionHeader">
                                            <img class="filterSprite" src="/s.gif" style="top: 4px;" />
                                            <span class="filterTitle">{!$Label.Field_Filters}</span>
                                            <a href="#" id="addFieldFilter" class="filterAction">Add Filter</a>
                                            <a href="#" class="filterAction" ng-show="selectedDataSet.fieldFilters.length > 1" ng-click="toggleFilterLogic()">
                                                {{ selectedDataSet.showFilterLogic ? 'Remove Logic' :  'Add Logic'}}
                                            </a>                                        
                                        </div>
                                        <div class="dataSetEditContainer">
                                            <div class="noFiltersMsg" ng-if="selectedDataSet.fieldFilters.length == 0">
                                                There are no Field Filters.
                                            </div>

                                            <!-- Filter Logic -->
                                            <div class="filterLogic" ng-show="selectedDataSet.showFilterLogic">
                                                <span class="semiBold">Filter Logic &nbsp;</span>
                                                <input ng-model="selectedDataSet.filterLogic" style="width: 420px;" class="gp-input" type="text"/>
                                            </div>

                                            <!-- Field Filters --> 
                                            <table border="0" cellpadding="0" cellspacing="0" class="list dataFilterTable" id="dataFilterTable" ng-show="selectedDataSet.fieldFilters.length > 0">
                                                <tbody id="dataFilterBody" class="ui-sortable" ui-sortable="sortableFieldFilterOptions" ng-model="selectedDataSet.fieldFilters">
                                                    <tr class="dataRow" ng-repeat="f in selectedDataSet.fieldFilters | orderBy:order">
                                                        <td class="dataCell" width="1px" ng-show="selectedDataSet.showFilterLogic">
                                                            <span class="filterNum">{{$index + 1}}.</span>
                                                        </td>
                                                        <td class="dataCell boldText" width="1px">{{f.fieldName}}</td>
                                                        <td class="dataCell" width="1px">
                                                            <select class="operatorPicklist" ng-model="f.operator" ng-options="o.value as o.label for o in operatorHelper[operatorHelper.getSelectorType(f.fieldType)].operatorOptions">
                                                            </select>
                                                        </td>
                                                        <td class="dataCell">
                                                            <input class="gp-input" type="text" ng-model="f.filterValue" style="width: 350px;" />
                                                        </td>
                                                        <td width="1px">
                                                            <a href="#" ng-click="removeFieldFilter($index)" class="gp-darkX removeFieldFilter">
                                                            </a>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>

                                        <!-- Child Filters -->
                                        
                                        <div class="editDataSetSectionHeader">
                                            <img class="filterSprite crossfilterLogicImg" src="/s.gif" style="top: 4px;" />
                                            <span class="filterTitle">{!$Label.Cross_Object_Filters}</span>
                                            <a href="#" id="addFieldFilter" ng-click="addChildFilter()" class="filterAction">Add Cross Object Filter</a>
                                        </div>

                                        <div class="dataSetEditContainer" ng-if="selectedDataSet.childFilters.length == 0">
                                            <div class="noFiltersMsg">
                                                There are no Cross Objects Filters.
                                            </div>
                                        </div>

                                        <div id="childFiltersContainer">

                                            <div class="dataSetEditContainer" ng-repeat="childFilter in selectedDataSet.childFilters">
                                                <a class="gp-darkX removeChildFilter" ng-click="removeFromArrayByIndex(selectedDataSet.childFilters,$index)"></a>
                                                <div>
                                                    <span class="boldText">{{selectedDataSet.mapObjectLabelPlural}}</span>
                                                    <select class="childWithWithout" ng-model="childFilter.withWithout">
                                                        <option value="IN">with</option>
                                                        <option value="NOT IN">without</option>
                                                    </select>
                                                    <select class="childObjectFilterList" ng-model="childFilter.childRelationshipName" 
                                                        ng-options="c.relationshipName as c.pluralLabel for c in selectedDataSet.childObjects"
                                                        ng-change="childFilterObjectChange(childFilter)">
                                                    </select>
                                                </div>

                                                <table border="0" cellpadding="0" cellspacing="0" class="list dataFilterTable childFieldFilterTable">
                                                    <tbody class="dataChildFilterBody">
                                                        <tr class="dataRow" ng-repeat="fieldFilter in childFilter.fieldFilters" ng-if="fieldFilter.fieldName">     
                                                        
                                                            <td class="dataCell"><img src="{!URLFOR($Resource.images, 'elbow.gif' )}"/></td>

                                                            <!-- TODO why is double $parent needed? -->
                                                            <td class="dataCell"><a href="#" ng-click="removeChildFieldFilter($parent.$parent.$index,$index)">Del</a></td>

                                                            <td class="dataCell">{{fieldFilter.fieldName}}</td>

                                                            <td class="dataCell">
                                                                <select class="operatorPicklist" ng-model="fieldFilter.operator" ng-options="o.value as o.label for o in operatorHelper[operatorHelper.getSelectorType(fieldFilter.fieldType)].operatorOptions">
                                                                </select>
                                                            </td>

                                                            <td class="dataCell">
                                                                <input class="filterValue" size="70" type="text" ng-model="fieldFilter.filterValue"/>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>

                                                <div class="addChildFieldFilterWrapper">
                                                    <img src="{!URLFOR($Resource.images, 'elbow.gif' )}"/>
                                                    <a class="addChildFieldFilter" data-startObject="{{getChildObjectNameFromRelationshipName(childFilter.childRelationshipName)}}" data-childFilterIndex="{{$index}}">Add <span class="addChildFieldFilterLabel">{{getChildPluralLabelFromRelationshipName(childFilter.childRelationshipName)}}</span> Filter</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Data Set Fields -->
                                <div id="dataSetEditFields" class="flat-tab-content" ng-show="dataSetEditTab == 'fields'">
                                    <div>
                                        Select the fields returned in searches. Fields will be displayed in the the record info window popup on the map and in the
                                        table of results below the map. All address fields are automatically returned and do not need to be selected.
                                    </div>

                                    <div class="editDataSetSectionHeader">
                                        <span class="filterTitle">Selected Fields</span>
                                        <a id="addDataSetField" class="filterAction">Add Field</a>
                                    </div>

                                    <div class="dataSetEditContainer" style="height: 200px;">
                                        <ul id="dataSetFieldList" ui-sortable="sortableFieldOptions" ng-model="selectedDataSet.fields">
                                            <li ng-repeat="f in selectedDataSet.fields">
                                                <span class="fieldLabel">{{f.field}}</span><span class="removeDataSetField" ng-click="removeFromArrayByIndex(selectedDataSet.fields,$index)">&#215;</span>
                                            </li>   
                                        </ul>
                                    </div>
                                    <div class="clear"/>

                                    <strong>
                                        <img class="gp_hoverhelp" id="gp_hoverhelp_NumberOfFields" src="{!URLFOR($Resource.images, 'map/help2x.png')}" style="position:relative;top:-3px;"/>
                                        Number of Fields Displayed in Results Table:
                                    </strong>
                                    <select ng-model="selectedDataSet.numOfFieldsDisplayedInTable">
                                        <option value="0">0</option>
                                        <option value="1">1</option>
                                        <option value="2">2</option>
                                        <option value="3">3</option>
                                        <option value="4">4</option>
                                        <option value="5">5</option>
                                        <option value="6">6</option>
                                        <option value="7">7</option>
                                        <option value="8">8</option>
                                        <option value="9">9</option>
                                        <option value="10">10</option>
                                    </select>
                                </div><!-- End Data Set Fields -->

                                <!-- Data Set Markers -->
                                <div id="dataSetEditMarkers" class="flat-tab-content" ng-show="dataSetEditTab == 'markers'">
                                    <p>Change the appearence of markers on the map when performing a search. 
                                        <b>Click</b> on a marker pin to change the color and icon.
                                    </p>
                                    
                                    <!--Marker type selection picklists -->
                                    <table cellpadding="2">
                                        <tr>
                                            <td class="alignRight editDataSetLabel">Marker Type</td>
                                            <td>
                                                <select ng-model="selectedDataSet.markerType" class="noMargin">
                                                    <option value="static">Static</option>
                                                    <option value="dynamic">Color by Field</option>
                                                </select>
                                            </td>
                                        </tr>
                                        <tr ng-show="selectedDataSet.markerType == 'dynamic'">
                                            <td class="alignRight editDataSetLabel">Field</td>
                                            <td>
                                                <a id="colorByField" href="#">{{selectedDataSet.colorByField.label ? selectedDataSet.colorByField.label : 'Click here to select Field'}}</a> | 
                                                <a href="#" ng-click="resetMarkerRules()">Reset</a>
                                            </td>
                                        </tr>
                                    </table>

                                    <!-- Static marker -->
                                    <div ng-show="selectedDataSet.markerType == 'static'" class="staticMarkerWrapper">
                                        <img class="pointerCursor" ng-src="https://api.geopointe.io/v1/markers/pin-l{{selectedDataSet.markerIcon ? '-'+selectedDataSet.markerIcon : ''}}+{{selectedDataSet.color}}.png" 
                                            marker-selector="foo" marker-color="selectedDataSet.color" marker-icon="selectedDataSet.markerIcon"/>
                                    </div>

                                    <!-- Dynamic markers, non numeric -->
                                    <div class="colorByRulesTableWrapper" ng-show="selectedDataSet.markerType == 'dynamic'" disable-page-scroll-on-hover="true">
                                        
                                        <!-- Non numeric marker rules -->
                                        <table cellpadding="0" cellspacing="0" class="colorByRulesTable" ng-show="selectedDataSet.markerRules.length > 0" ng-if="getColorByBasicFieldType(selectedDataSet.colorByField.type) != 'number'">
                                            <thead>
                                                <tr>
                                                    <th style="padding-left: 6px;">Value</th>    
                                                    <th>Marker</th>
                                                    <th ng-if="getColorByBasicFieldType(selectedDataSet.colorByField.type) != 'boolean'">&nbsp;</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr ng-repeat="r in selectedDataSet.markerRules">
                                                    <td class="valueCol" ng-class="{'topLeft' : $first, 'bottomLeft' : $last, 'left' : $middle}">
                                                        <span ng-if="getColorByBasicFieldType(selectedDataSet.colorByField.type) == 'boolean'">{{r.value}}</span>
                                                        <input ng-if="['text','picklist'].indexOf(getColorByBasicFieldType(selectedDataSet.colorByField.type)) > -1" type="text" class="gp-input" ng-model="r.value"/>
                                                    </td>
                                                    <td class="markerCol" ng-class="{'top' : $first, 'bottom' : $last, 'topRight' : $first && getColorByBasicFieldType(selectedDataSet.colorByField.type) == 'boolean', 'bottomRight' : $last && getColorByBasicFieldType(selectedDataSet.colorByField.type) == 'boolean'}">
                                                        <img class="pointerCursor colorByMarkerIcon" ng-src="https://api.geopointe.io/v1/markers/pin-l{{r.icon ? '-'+r.icon : ''}}+{{r.color}}.png" 
                                                            marker-selector="foo" marker-color="r.color" marker-icon="r.icon" height="32px"/>
                                                    </td>
                                                    <td width="28px" ng-class="{'topRight' : $first, 'bottomRight' : $last, 'right' : $middle}" ng-if="getColorByBasicFieldType(selectedDataSet.colorByField.type) != 'boolean'">
                                                        <a class="gp-darkX removeColorRule" href="#" ng-click="removeFromArrayByIndex(selectedDataSet.markerRules,$index)"></a>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>

                                        <!-- Numeric marker rules -->
                                        <div ng-if="getColorByBasicFieldType(selectedDataSet.colorByField.type) == 'number'">
                                            <table cellpadding="0" cellspacing="0" class="colorByRulesTable" ng-show="selectedDataSet.markerRules.length > 0">
                                                <thead>
                                                    <tr>
                                                        <th style="padding-left: 6px;">From</th> 
                                                        <th>To</th>   
                                                        <th>Marker</th>
                                                        <th ng-if="getColorByBasicFieldType(selectedDataSet.colorByField.type) != 'boolean'">&nbsp;</th> <!--remove coloumn -->
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr ng-repeat="r in selectedDataSet.markerRules">
                                                        
                                                        <!-- First or last -->
                                                        <td class="valueCol" ng-class="{'topLeft' : $first, 'bottomLeft' : $last, 'left' : $middle}" colspan="2" ng-if="$first || $last">
                                                            <span ng-if="$first">
                                                                Less than {{r.toVal | number}}
                                                            </span>
                                                            <span ng-if="$last">
                                                                <input type="number" class="gp-input" ng-model="r.fromVal" size="14" ng-change="rangeValueChange($index);"/> and above
                                                                <div ng-if="r.status">{{r.status}}</div>
                                                            </span>
                                                        </td>   

                                                        <!-- Not first or last -->
                                                        <td class="valueCol" ng-if="$middle" ng-class="{'topLeft' : $first, 'bottomLeft' : $last, 'left' : $middle}">
                                                            <input type="number" class="gp-input" ng-model="r.fromVal" size="14" ng-change="rangeValueChange($index);"/>
                                                            <div ng-if="r.status">{{r.status}}</div>
                                                        </td>   
                                                        <td class="valueCol" ng-if="$middle" ng-class="{'top' : $first, 'bottom' : $last}">
                                                            {{r.toVal | number:selectedDataSet.colorByField.scale}}
                                                        </td>
                                                    
                                                        <td class="markerCol" ng-class="{'top' : $first, 'bottom' : $last}">
                                                            <img class="pointerCursor colorByMarkerIcon" ng-src="https://api.geopointe.io/v1/markers/pin-l{{r.icon ? '-'+r.icon : ''}}+{{r.color}}.png" 
                                                                marker-selector="foo" marker-color="r.color" marker-icon="r.icon" height="32px"/>
                                                        </td>
                                                        <td width="28px" ng-class="{'topRight' : $first, 'bottomRight' : $last, 'right' : $middle}">
                                                            <a class="gp-darkX removeColorRule" href="#" ng-click="removeNumericMarkerRuleByIndex($index)"></a>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>

                                        <div ng-if="selectedDataSet.markerRules.length == 0" class="colorByMarkerInfo">
                                            <p>Marker colors will be automatically assigned based on the search results.</p>
                                            
                                            <span ng-if="showAddColorRule()">
                                                <p>Use the <b>"Add Color Rule"</b> button below to create custom marker color rules.</p>
                                                <span ng-if="['boolean','picklist'].indexOf(getColorByBasicFieldType(selectedDataSet.colorByField.type)) > -1">
                                                    To populate and reset the list of marker color rules click the 'Reset' link above.
                                                </span>
                                            </span>
                                        </div>

                                        <input type="button" class="gp-btn" value="Add Color Rule" ng-click="addMarkerRule()" ng-if="showAddColorRule()" style="margin: 9px 0px 5px 0px;"/>

                                    </div>

                                </div>

                                <!-- Other Data Set Settings -->
                                <div id="dataSetEditOther" class="flat-tab-content" ng-show="dataSetEditTab == 'other'">
                                    <img class="gp_hoverhelp" id="gp_hoverhelp_DataSetSettings" src="{!URLFOR($Resource.images, 'map/help2x.png')}" style="position:absolute;right:12px;"/>

                                    <table id="dataSetEditSettings" cellpadding="0" cellspacing="8px">
                                        <tr style="display: {!IF(isGeopointeAdmin,'table-row','none')}">
                                            <td class="editDataSetLabel">{!$Label.Data_Set_Access}</td>
                                            <td>
                                                <select id="editDataSetOwnership" ng-model="selectedDataSet.ownerId">
                                                    <option value="{!$User.Id}">{!$Label.Me}</option>
                                                    <option value="{!$Organization.Id}">{!$Label.All_Users}</option>
                                                </select>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="editDataSetLabel">{!$Label.Available_in_Visualize}</td>
                                            <td><input id="editDataSetAvailableInVisualize" type="checkbox" class="gp-checkbox" gp-checkbox="true" ng-model="selectedDataSet.availableInVisualize"/></td>
                                        </tr>
                                        <tr>
                                            <td class="editDataSetLabel">{!$Label.One_Column_Address}</td>
                                            <td><input id="editDataSetOneColumnAddress" type="checkbox" class="gp-checkbox" gp-checkbox="true" ng-model="selectedDataSet.oneColumnAddress"/></td>
                                        </tr>
                                        <tr ng-if="isGeopointeAdmin()">
                                            <td class="editDataSetLabel">Id</td>
                                            <td>{{selectedDataSet.name}}</td>
                                        </tr>
                                    </table>
                                </div>
                            </div>

                            <div class="gp-modal-footer" id="dataSetEditButtons">
                                <input type="button" class="gp-btn btn-lg btn-danger floatLeft" value="{!$Label.Delete}" ng-click="confirmDeleteDataSet(selectedDataSet.name)" ng-if="showDelBtn()"/>
                                <input type="button" class="gp-btn btn-lg dataSetEditButtonRight" value="{!$Label.Close}" onclick="jQuery(this).closest('.ui-dialog-content').dialog('close');"/>
                                <input type="button" class="gp-btn btn-lg btn-primary dataSetEditButtonRight" value="{!$Label.Save_As}" ng-click="openSaveConfirm(true);"/>
                                <input type="button" class="gp-btn btn-lg btn-primary dataSetEditButtonRight" value="{!$Label.Save}" ng-click="openSaveConfirm(false);" ng-if="showSaveBtn()"/>
                                <div class="clear"/>
                            </div>
                        </div><!--End data set edit modal -->

                        <!-- Search Cell -->
                        <div>
                            <div class="mapControlHeader">
                                Search Data Sets
                                <img class="gp_hoverhelp" id="gp_hoverhelp_search" src="{!URLFOR($Resource.images, 'map/help2x.png')}" alt=""/>
                                <span class="ui-icon ui-icon-triangle-1-n collapseControlIcon" title="{!$Label.Collapse_Panel}"></span>
                            </div>
                            
                            <div id="dataSetContentWrapper">
                                <div class="dataSetContentSection">
                                    <div class="dataSetSelect2Wrapper"> 
                                        <select ui-select2="dataSetSelect2Options" ng-model="selectedDataSetId" data-placeholder="Pick a number" id="dataSetSelect2" style="width: 270px">
                                            <optgroup ng-repeat="(key, value) in dataSetsForSelect2" label="{{key}}">
                                                <option ng-repeat="dataSet in value.dataSets | orderBy:'dataSetName'" value="{{dataSet.name}}">{{dataSet.dataSetName}}</option>
                                            </optgroup> 
                                        </select>

                                        <div class="dataSetSelectSettings">
                                            <span class="dataSetSelectSettingsSeperator"/>

                                            <span class="openEditDataSet dataSetSettingIcon">
                                                <img src="{!URLFOR($Resource.images, 'map/settings2x.png')}" title="Data Set Settings" height="16px" />
                                            </span>
                                            
                                            <span class="openEditDataSet dataSetSettingIcon" ng-click="dataSetEditTab = 'filters'" style="padding-right: 8px;">
                                                <img src="{!URLFOR($Resource.images, 'map/filter2x.png')}" height="16px" ng-show="!(selectedDataSet.childFilters.length + selectedDataSet.fieldFilters.length) > 0"/>
                                                <img src="{!URLFOR($Resource.images, 'map/filter2xOrange.png')}" title="Data Set Settings" height="16px" ng-show="(selectedDataSet.childFilters.length + selectedDataSet.fieldFilters.length) > 0"/>
                                            </span>

                                            <span class="openEditDataSet dataSetSettingIcon" ng-click="dataSetEditTab = 'markers'">
                                                <img class="pointerCursor" src="{!URLFOR($Resource.images, 'map/marker-colors2x.png')}" height="16px" ng-show="selectedDataSet.markerType == 'dynamic'"/>
                                                <div class="dataSetColorIndicator" style="background-color: #{{selectedDataSet.color}}" ng-show="selectedDataSet.markerType == 'static'"/>
                                            </span>
                                        </div>
                                        <div class="clear"/>
                                    </div>

                                    <!-- keep this just in case we need to display it for old browsers -->
                                    <select ng-show="false" ng-model="selectedDataSet" ng-options="dataSet as dataSet.dataSetName group by dataSet.mapObjectLabel for dataSet in dataSets | orderBy:['mapObjectLabel','dataSetName']"></select>
                                
                                    <div id="searchTypeButtons" class="btn-group">
                                        <input type="button" class="gp-btn" style="width: 87px" ng-class="{'gp-btn-selected': searchType == 'nearby'}" ng-click="searchType = 'nearby'" value="Nearby"/>
                                        <input type="button" class="gp-btn" style="width: 87px; display: {!IF(mapProvider == 'Google','block','none')}" ng-class="{'gp-btn-selected': searchType == 'shape'}" ng-click="searchType = 'shape'" value="Shape"/>
                                        <input type="button" class="gp-btn" style="width: 87px" ng-class="{'gp-btn-selected': searchType == 'bounds'}" ng-click="searchType = 'bounds'" value="Map View"/>
                                        <input type="button" class="gp-btn" ng-class="{'gp-btn-selected': searchType == 'all'}" ng-click="searchType = 'all'" value="Everywhere"/>
                                    </div>
                                </div>

                                <div class="dataSetContentSection" ng-show="searchType == 'nearby'" style="padding-top: 0px; padding-bottom: 5px;">
                                    <table cellpadding="0" cellspacing="0" class="gp-inputTable">
                                        <tr>
                                            <td class="labelCol alignTop">{!$Label.Search_From}</td>
                                            <td class="inputCol alignTop">
                                                
                                                <span id="centerContextTitleOutput">
                                                    
                                                    <apex:outputPanel layout="block" rendered="{!NOT(ISNULL(centerPOI))}">
                                                        <a href="/{!centerPOI.recordid}" class="semiBold">{!centerPOI.title}</a>
                                                        <span title="Geocode Quality - {!centerPOI.geocodeQuality}">
                                                            <apex:image styleClass="geocodeQualityTitle" url="{!URLFOR($Resource.geopointe__images, '/confirm12.png')}" rendered="{!centerPOI.geocodeQuality='POINT' || centerPOI.geocodeQuality='ADDRESS' || centerPOI.geocodeQuality='STREET' || centerPOI.geocodeQuality='INTERSECTION'}" />
                                                            <apex:image styleClass="geocodeQualityTitle" url="{!URLFOR($Resource.geopointe__images, '/warning12.png')}" rendered="{!centerPOI.geocodeQuality='CITY' || centerPOI.geocodeQuality='ZIP' || centerPOI.geocodeQuality='ZIP_EXTENDED'}" />
                                                            <apex:image styleClass="geocodeQualityTitle" url="{!URLFOR($Resource.geopointe__images, '/error12.png')}" rendered="{!centerPOI.geocodeQuality='COUNTY' || centerPOI.geocodeQuality='STATE' || centerPOI.geocodeQuality='COUNTRY'}" />
                                                        </span>
                                                        <br/>

                                                        <apex:outputPanel layout="block" rendered="{!centerPOI.street != ''}">
                                                            <apex:outputText value=" {!centerPOI.street}"/>
                                                        </apex:outputPanel>

                                                        <apex:outputPanel layout="block" rendered="{!OR(centerPOI.city != '',  centerPOI.state != '', centerPOI.postalCode != '',  centerPOI.country != '')}">
                                                            <apex:outputText value=" {!centerPOI.city}" rendered="{!centerPOI.city != ''}"/>
                                                            <apex:outputText value="," rendered="{!centerPOI.city != '' && centerPOI.state != ''}"/>
                                                            <apex:outputText value=" {!centerPOI.state}" rendered="{!centerPOI.state != ''}"/>
                                                            <apex:outputText rendered="{!centerPOI.postalCode != ''}">&nbsp;{!centerPOI.postalCode}</apex:outputText>
                                                            <apex:outputText rendered="{!centerPOI.country != ''}">, {!centerPOI.country}</apex:outputText>
                                                        </apex:outputPanel>
                                                    </apex:outputPanel>

                                                    <apex:outputPanel rendered="{!ISNULL(centerPOI)}">
                                                        Center of the Map
                                                    </apex:outputPanel>

                                                </span>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="labelCol alignMiddle">Range</td>
                                            <td class="inputCol alignMiddle">
                                                <apex:inputText id="radialSearchRange" onkeypress="javascript:gp_DoClick(event,'dataSetSearchBtn');" styleClass="gp-input" value="{!searchNearbyRange}" size="7" style="position:relative; top: 1px;"/>
                                                <apex:selectList id="radialSearchUnit" value="{!searchNearbyUnit}" multiselect="false" size="1" style="width: 100px; margin-left: 10px;" > 
                                                    <apex:selectOption itemValue="miles" itemLabel="{!$Label.Miles}"/>
                                                    <apex:selectOption itemValue="kilometers" itemLabel="{!$Label.Kilometers}"/>
                                                </apex:selectList>       
                                            </td>
                                        </tr>
                                    </table>
                                </div>

                                <div class="dataSetContentSection" ng-show="searchType == 'shape'" style="padding-top: 0px; padding-bottom: 5px;">
                                    <table cellpadding="0" cellspacing="0" class="gp-inputTable">
                                        <tr>
                                            <td class="labelCol">{!$Label.Saved_Shapes}</td>
                                            <td class="inputCol">
                                                <select id="shapeList">    
                                                    <option value="--None--">--{!$Label.None}--</option>

                                                    <!--There are only user shapes -->
                                                    <option value="" disabled="true" data-keepElement="{!AND(shapeList.userShapes.size == 1000,shapeList.display != 'both')}">***{!$Label.Only_first_1000_Shapes_Listed}***</option>   

                                                    <apex:repeat value="{!shapeList.userShapes}" var="s">
                                                        <option value="{!s.Id}" data-keepElement="{!shapeList.display != 'both'}">{!s.Name}</option>
                                                    </apex:repeat>

                                                    <!--There are only other shapes -->
                                                    <option value="" disabled="true" data-keepElement="{!AND(shapeList.otherShapes.size == 1000,shapeList.display != 'both')}">***{!$Label.Only_first_1000_Shapes_Listed}***</option>  

                                                    <apex:repeat value="{!shapeList.otherShapes}" var="s">
                                                        <option value="{!s.Id}" data-keepElement="{!shapeList.display != 'both'}">{!s.Name}</option>
                                                    </apex:repeat>

                                                    <!--There are both user and other shapes -->
                                                    <optgroup label="{!$Label.My_Shapes}" class="userShapes" data-keepElement="{!shapeList.display == 'both'}">
                                                        
                                                        <option value="" disabled="true" data-keepElement="{!shapeList.userShapes.size == 1000}">***{!$Label.Only_first_1000_Shapes_Listed}***</option>

                                                        <apex:repeat value="{!shapeList.userShapes}" var="s">
                                                            <option value="{!s.Id}">{!s.Name}</option>
                                                        </apex:repeat>
                                                    </optgroup>
                                                
                                                    <optgroup label="{!$Label.Other_Shapes}" class="otherShapes" data-keepElement="{!shapeList.display == 'both'}">>
                                                        
                                                        <option value="" disabled="true" data-keepElement="{!shapeList.otherShapes.size == 1000}">***{!$Label.Only_first_1000_Shapes_Listed}***</option>

                                                        <apex:repeat value="{!shapeList.otherShapes}" var="s">
                                                            <option value="{!s.Id}">{!s.Name}</option>
                                                        </apex:repeat>
                                                    </optgroup>
                                                </select>
                                                
                                                <input type="button" class="gp-btn btn-sm" value="{!$Label.Add_To_Map}" onclick="gp_addShapeToMap();"/>

                                                <script>
                                                    var shapeId = '{!selectedShapeId}';
                                                    jQuery("#shapeList").val(shapeId);

                                                    //Remove uneccessary elemtns from picklist
                                                    jQuery("#shapeList").find('*').each(function(){
                                                        if(jQuery(this).attr('data-keepElement') == 'false'){
                                                            jQuery(this).remove();
                                                        }
                                                    });
                                                </script>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="labelCol">Tools</td>
                                            <td class="inputCol">
                                                <div class="btn-group" id="drawToolBtnGroup">
                                                    <input id="drawHand" type="button" class="gp-btn drawToolOption drawHand gp-btn-selected" value=""/>
                                                    <input id="drawPolygon" type="button" class="gp-btn drawToolOption drawPolygon" value=""/>
                                                </div>

                                                <input type="button" class="gp-btn" id="removeAllShapesBtn" value="{!$Label.Remove_All}" onclick="gp_removeAllShapesFromMap(); return false;"/>
                                            </td>
                                        </tr>
                                    </table>
                                </div>

                                <!-- Place to inject HTML --><div id="gp_customHTML_MapDataSets_below"></div>

                                <div id="searchButtonWrapper">
                                    <div id="clearMapOnSearchWrapper">
                                        <input type="checkbox" class="gp-checkbox" gp-checkbox="true" id="clearExisting" checked="checked"/> 
                                        Clear Map on Search
                                    </div>
                                    <div id="dataSetSearchBtnWrapper"><input type="button" id="dataSetSearchBtn" class="gp-btn btn-primary btn-lg dataSetSearchBtn" value="Search" ng-click="doSearch()"/></div>
                                    <div class="clear"/>
                                </div>
                            </div>
                        </div>
					</div>
					<div class="mapControlTab">
						<div class="mapControlTabInner" style="margin-left: 12px;">
                            <div class="mapControlTabTopShadow">
                                <div class="mapControlTabTopShadow1"/>
                                <div class="mapControlTabTopShadow2"/>
                                <div class="mapControlTabTopShadow3"/>
                            </div>

                            <img class="mapControlTabIcon" src="{!URLFOR($Resource.images, 'map/dataset2x.png')}" title="{!$Label.Data_Sets}"/>
                        </div>
					</div>
				</div> <!--End Data Sets map Control-->
			
				<!-- Search Map Control -->
				<div class="mapControl noHeightSet" name="search" id="searchPanel">
					<div class="mapControlContent">
                        <div class="mapControlHeader" style="border-color: #cf5c60">
                            Address &amp; Places
                            <img class="gp_hoverhelp" id="gp_hoverhelp_PlacesSearch" src="{!URLFOR($Resource.images, 'map/help2x.png')}" alt=""/>
                            <span class="ui-icon ui-icon-triangle-1-n collapseControlIcon" title="{!$Label.Collapse_Panel}"></span>
                        </div>

                        <div class="placesSearchContent">
                            <div id="format">
                                <input type="radio" id="addressSearch" name="searchType" value="address" checked="true"/><label for="addressSearch">{!$Label.Address}</label>
                                <input type="radio" id="placesSearch" name="searchType" value="places" /><label for="placesSearch">{!$Label.Places}</label>
                            </div>
                            
                            <table cellpadding="0" cellspacing="0" style="margin-top:3px;">
                                <tr>
                                    <td style="vertical-align:middle;"><input class="gp-input searchInput" type="text" id="gp_placesSearchString" onkeypress="javascript:gp_DoClick(event,'searchNow');" /></td>
                                    <td style="vertical-align:middle;" width="1px"><input id="searchNow" name="searchNow" class="gp-btn btn-primary" onclick="gp_search();" value="{!$Label.Search}" type="button" /></td>
                                </tr>
                            </table>
                           
    						<div id="placesSearchOptions" style="display:none;"> <!--initially hidden -->
    							<div class="placesSearchOption">
                                    <input id="gp_placesRestrictSearchArea" type="checkbox" checked="checked"/>&nbsp;{!$Label.Restrict_Results_to_Maps_Viewable_Area}
                                </div>
                                <div class="placesSearchOption">
                                    <input id="clearNow" name="clearNow" class="gp-btn btn-sm" onclick="javascript: gp_clearPlaces(); return false;" value="{!$Label.Clear_Results}" type="button" />
                                </div>
    						</div>
                        </div>
					</div>
					<div class="mapControlTab">
                        <div class="mapControlTabInner">
                            <div class="mapControlTabTopShadow">
                                <div class="mapControlTabTopShadow1"/>
                                <div class="mapControlTabTopShadow2"/>
                                <div class="mapControlTabTopShadow3"/>
                            </div>

    						<img class="mapControlTabIcon" src="{!URLFOR($Resource.images, 'map/search2x.png')}" title="{!$Label.Search}"/>
                        </div>
					</div>
				</div><!-- End Search Map Control -->

                <!-- Layers Map Control -->
                <div class="mapControl" name="layers" id="layersPanel">
                    <div class="mapControlContent">
                        
                        <div class="mapControlHeader" style="border-color: #4EB1CB">
                            {!$Label.Layers}
                            <span class="ui-icon ui-icon-triangle-1-n collapseControlIcon" title="{!$Label.Collapse_Panel}"></span>
                        </div>

                        <div id="layerTabs" class="mapControlUITabs">
                            <ul>
                                <li><a href="#tabs-kml">{!$Label.Layers}&nbsp; <img src="{!URLFOR($Resource.images, 'map/help2x.png')}" class="gp_hoverhelp" id="gp_hoverhelp_kmlLayers" /></a></li>
                                <li><a href="#tabs-demographics">{!$Label.Demographics}&nbsp; <img src="{!URLFOR($Resource.images, 'map/help2x.png')}" class="gp_hoverhelp" id="gp_hoverhelp_Demographics" /></a></li>
                                <li><a href="#tabs-other">{!$Label.Other}&nbsp; <img src="{!URLFOR($Resource.images, 'map/help2x.png')}" class="gp_hoverhelp" id="gp_hoverhelp_OtherLayers" /></a></li>
                            </ul>
                            <div id="tabs-kml" class="layerTab">
                                <apex:outputPanel id="layersContent">
                                    <!-- My Saved Locations -->
                                    <apex:outputPanel rendered="{!layers.size > 0}">
                                        <strong>{!$Label.Filter}:&nbsp;</strong>
                                        <input type="text" size="30" class="gp-input tableFilterInput" style="margin-bottom: 1px"/>
                                    </apex:outputPanel>

                                    <div id="layersOuterTableWrapper" class="scrollableTableWrapper">
                                        
                                        <div id="layersFloatingHeaders" class="floatingTableHeaders"></div>
                                        
                                        <apex:outputPanel rendered="{!layers.size > 0}" layout="block">
                                            <table id="layersTable" cellpadding="0" cellspacing="0" class="list display gp_dataTable filterableTable" data-floatingHeadersId="layersFloatingHeaders" style="display:block; max-width: 600px">
                                                <thead>
                                                    <tr class="headerRow">
                                                        <th class="headerRow">{!$Label.Action}</th>
                                                        <th class="headerRow">{!$Label.Name}</th>
                                                        <th class="headerRow">{!$ObjectType.Layer__c.fields.Description__c.label}</th>
                                                    </tr>
                                                </thead>    
                                                <tbody>
                                                    <apex:repeat value="{!layers}" var="l">
                                                        <tr data-url="{!l.URL__c}">
                                                            <td>
                                                               <div style="white-space: nowrap;">
                                                                    <a href="#" class="actionLink addRemoveLayer" data-url="{!l.URL__c}">{!$Label.Add}</a> <!--event listner for this in map.js .ready() -->
                                                                    |
                                                                    <a href="#" class="actionLink zoomToShowLayer actionLinkDisabled" data-url="{!l.URL__c}">{!$Label.Zoom_to_Show}</a> <!--event listner for this in map.js .ready() -->
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div style="white-space: nowrap;">
                                                                    <div class="filterValue">
                                                                        {!l.Name}
                                                                        <img width="8px" style="visibility:hidden;" class="layerGreenDot" src="{!URLFOR($Resource.images, 'map/greendot.png')}" title="{!$Label.This_Layer_is_currently_displayed_on_the_map}"/>
                                                                    </div>
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <span class="filterValue" >
                                                                   {!l.Description__c}
                                                                </span>
                                                            </td>
                                                        </tr>
                                                    </apex:repeat>
                                                </tbody>   
                                            </table>
                                        </apex:outputPanel>
                                    </div>

                                    <apex:outputPanel rendered="{!layers.size == 0}" layout="block">
                                        {!$Label.Please_contact_your_system_administrator_to_setup_Layers}
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </div>
                            <div id="tabs-demographics" class="layerTab">
                                <div id="gp_demoDIV">
                                    <div>
                                        <table>
                                        <tr>
                                        <td class="demoLabel demoFixedLabel">{!$Label.Year}</td>
                                        <td>
                                            <select name="gp_demoYear" id="gp_demoYear">
                                                <option value="2010">2010</option>
                                                <option value="2011" selected="selected">2011</option>
                                                <option value="2015p">2015 (Projected)</option>
                                                <option value="2016p">2016 (Projected)</option>
                                            </select>
                                        </td>
                                        <td class="demoLabel">{!$Label.Granularity}</td>
                                        <td>
                                            <select name="gp_demoGranularity" id="gp_demoGranularity">
                                                <option value="" selected="selected">-- None --</option>
                                                <option value="state">State</option>
                                                <option value="county">County</option>
                                                <option value="tract">Census Tract</option>
                                                <option value="block_group">Census Block Group</option>
                                            </select>
                                        </td>
                                        </tr><tr>
                                        <td class="demoLabel demoFixedLabel">{!$Label.Metric}</td>
                                        <td colspan="3">
                                            <select name="gp_demoMetric" id="gp_demoMetric"></select>
                                        </td>
                                        </tr>
                                        </table>
                                    </div>

                                    <div >
                                        <table>
                                        <tr>
                                        <td class="demoLabel demoFixedLabel">{!$Label.Fill_Opacity}</td>
                                        <td width="250px"><div id="gp_demoFillOpacity"></div></td>
                                        </tr><tr>
                                        <td class="demoLabel demoFixedLabel">{!$Label.Border_Opacity}</td>
                                        <td width="250px"><div id="gp_demoBorderOpacity"></div></td>
                                        </tr>
                                        </table>
                                    </div>

                                    <div>
                                        <table>
                                        <tr>
                                        <td class="demoLabel demoFixedLabel">{!$Label.Min_Value}</td>
                                        <td><input id="gp_demoMinValue" type="text" value="" class="gp-input" /></td>
                                        <td class="demoLabel">{!$Label.Max_Value}</td>
                                        <td><input id="gp_demoMaxValue" type="text" value="" class="gp-input"/></td>
                                        </tr>
                                        </table>
                                    </div>

                                    <input id="gp_demoShowLegend" name="gp_demoShowLegend" class="btn" value="{!$Label.Show_Legend}" type="button" />
                                </div>
                            </div>
                            <div id="tabs-other" class="layerTab">
                                <input class="gp-btn" id="buttonTrafficLayer" name="buttonTrafficLayer" onclick="javascript:gp_toggleTraffic(); return false;" value="{!$Label.Toggle_Traffic_On}" type="button" />
                                <br/><br/>
                                <input class="gp-btn" id="buttonTransitLayer" name="buttonTransitLayer" onclick="javascript:gp_toggleTransit(); return false;" value="{!$Label.Toggle_Transit_On}" type="button" />
                                <br/><br/>
                                <input class="gp-btn" id="buttonBicyclingLayer" name="buttonBicyclingLayer" onclick="javascript:gp_toggleBicycling(); return false;" value="{!$Label.Toggle_Bicycling_On}" type="button" />
                                <br/><br/>
                                <input class="gp-btn" id="buttonWeatherLayer" name="buttonWeatherLayer" onclick="javascript:gp_toggleWeather(); return false;" value="{!$Label.Toggle_Weather_On}" type="button" />
                            </div>
                        </div>
                    </div>
                    <div class="mapControlTab">
                        <div class="mapControlTabInner">
                            <div class="mapControlTabTopShadow">
                                <div class="mapControlTabTopShadow1"/>
                                <div class="mapControlTabTopShadow2"/>
                                <div class="mapControlTabTopShadow3"/>
                            </div>

                            <img class="mapControlTabIcon" src="{!URLFOR($Resource.images, 'map/layers2x.png')}" title="{!$Label.Layers} & {!$Label.Demographics}"/>
                        </div>
                    </div>
                </div><!-- End Layers Map Control -->
            
                <!-- Locations / My Places Map Control -->
                <div class="mapControl noHeightSet" name="locations" id="locationsPanel">
                    <div class="mapControlContent">

                        <div class="mapControlHeader" style="border-color: #F69D00">
                            {!$Label.My_Locations}
                            <img class="gp_hoverhelp" id="gp_hoverhelp_myLocations" src="{!URLFOR($Resource.images, 'map/help2x.png')}" alt=""/>
                            <span class="ui-icon ui-icon-triangle-1-n collapseControlIcon" title="{!$Label.Collapse_Panel}"></span>
                        </div>

                        <apex:outputPanel id="myLocationsContent" layout="block" styleClass="myLocationsContent">
                            <!-- My Saved Locations -->
                            <apex:outputPanel rendered="{!myLocations.size > 0}">
                                <strong>{!$Label.Filter}:&nbsp;</strong>
                                <apex:inputText id="myLocationsFilter" value="{!locationFilter}" size="30" styleClass="tableFilterInput gp-input" style="margin-bottom: 1px"/>
                            </apex:outputPanel>

                            <div id="myLocationsOuterTableWrapper" class="scrollableTableWrapper">
                                
                                <div id="myLocationsFloatingHeaders" class="floatingTableHeaders"></div>
                                
                                <div id="myLocationsTableWrapper">
                                    
                                    <apex:outputPanel rendered="{!myLocations.size > 0}">
                                        <table id="myLocationsTable" cellpadding="0" cellspacing="0" class="list display gp_dataTable filterableTable" data-floatingHeadersId="myLocationsFloatingHeaders">
                                            <thead>
                                                <tr class="headerRow">
                                                    <th class="headerRow">{!$Label.Action}</th>
                                                    <th class="headerRow">{!$Label.Name}</th>
                                                    <th class="headerRow">{!$Label.Location}</th>
                                                </tr>
                                            </thead>    
                                            <tbody>
                                                <apex:repeat value="{!myLocations}" var="list"> <!--list within a list to avoid 1000 VF collection limit -->
                                                    <apex:repeat value="{!list}" var="l">
                                                        <tr>
                                                            <td>
                                                                <div style="white-space: nowrap;">
                                                                    <a href="#" class="actionLink" onclick="gp_goToMyLocationWrapper('{!l.Id}'); return false;">{!$Label.Go_Here}</a> | 
                                                                    <a href="#" class="actionLink" onclick="gp_addToRouteMyLocation('{!l.Id}'); return false;">{!$Label.Add_To_Route}</a> |&nbsp;
                                                                    <apex:commandLink value="{!$Label.Del}" action="{!deleteLocation}" rerender="myLocationsContent" styleClass="actionLink locationDelLink"
                                                                        onclick="if(!confirm('{!$Label.Are_you_sure_you_want_to_delete_the_selected_location}')) return false; geopointeAjaxStart('body','{!$Label.Deleting_Location}...');" 
                                                                        oncomplete="setMyLocationsTableMaxHeight(); geopointeAjaxEnd();">
                                                                        <apex:param name="locationIdToDelete" assignTo="{!locationIdToDelete}" value="{!l.Id}" />
                                                                    </apex:commandLink>
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <span class="locationName filterValue" data-locationNameId="{!l.Id}">{!l.Name}</span>
                                                            </td>
                                                            <td>
                                                                <span class="locationAddress filterValue" data-locationAddressId="{!l.Id}" data-lat="{!l.latitude__c}" data-lng="{!l.longitude__c}" data-street="{!l.geopointe__Street__c}" 
                                                                data-city="{!l.geopointe__City__c}" data-state="{!l.geopointe__State__c}" data-postalCode="{!l.geopointe__PostalCode__c}" data-country="{!l.Country__c}">
                                                                    <apex:outputText value=" {!l.geopointe__Street__c}" rendered="{!l.geopointe__Street__c != ''}"/>
                                                                    <apex:outputText value="," rendered="{!l.geopointe__Street__c != '' && l.geopointe__City__c != ''}"/>
                                                                    <apex:outputText value=" {!l.geopointe__City__c}" rendered="{!l.geopointe__City__c != ''}"/>
                                                                    <apex:outputText value="," rendered="{!l.geopointe__City__c != '' && l.geopointe__State__c != ''}"/>
                                                                    <apex:outputText value=" {!l.geopointe__State__c}" rendered="{!l.geopointe__State__c != ''}"/>
                                                                    <apex:outputText rendered="{!l.geopointe__PostalCode__c != ''}"> {!l.geopointe__PostalCode__c}</apex:outputText>
                                                                    <apex:outputText rendered="{!l.geopointe__Country__c != ''}">, {!l.geopointe__Country__c}</apex:outputText>
                                                                </span>
                                                            </td>
                                                        </tr>
                                                    </apex:repeat>
                                                </apex:repeat>
                                            </tbody>   
                                        </table>
                                    </apex:outputPanel>
                                </div>
                            </div>

                            <apex:outputPanel rendered="{!myLocations.size == 0}" layout="block">
                                You do not have any saved locations. Once you do, an option to use those locations will be here.
                            </apex:outputPanel>
                        </apex:outputPanel>
                            
                       <!-- Place to inject HTML -->
                       <div id="gp_customHTML_manualEntry_below"></div>
                        
                    </div>
                    <div class="mapControlTab">
                        <div class="mapControlTabInner">
                            <div class="mapControlTabTopShadow">
                                <div class="mapControlTabTopShadow1"/>
                                <div class="mapControlTabTopShadow2"/>
                                <div class="mapControlTabTopShadow3"/>
                            </div>

                            <img class="mapControlTabIcon" src="{!URLFOR($Resource.images, 'map/locations2x.png')}" title="{!$Label.My_Locations}"/>
                        </div>
                    </div>
                </div> <!--End Places map control -->
            
                <!-- Routes Map Control -->
                <div class="mapControl routeController" name="routes" id="routePanel" ng-controller="RouteController">
                    <div class="mapControlContent" id="routeControl">
                        
                        <div class="mapControlHeader" style="border-color: #4AB471">
                            {!$Label.Routes}
                            <span class="ui-icon ui-icon-triangle-1-n collapseControlIcon" title="{!$Label.Collapse_Panel}"></span>
                        </div>

                        <div id="routeContent">
                            <div id="routeTabTop">
                                <div class="routeListSelectWrapper">
                                    <select data-placeholder="Choose a Route" style="max-width: 280px"
                                        ng-model="selectedRoute" ng-options="route as route.name group by route.groupingLabel for route in savedRoutes | orderBy:['groupingOrder',orderRouteList]"> <!-- this has a $watch on it to handle changes -->
                                    </select>
                                    <input class="gp-btn btn-sm" ng-class="activeRoute.id ? '' : 'btn-disabled'" type="button" value="Open" ng-disabled="activeRoute.id ? false : true" ng-click="loadSavedRouteDetail(selectedRoute.id)"/>
                                    <span class="deleteRouteIcon" ng-class="activeRoute.id ? '' : 'routeActionDisabled'" ng-click="deleteRoute(selectedRoute.id)">
                                        <img src="{!URLFOR($Resource.images, '/map/trash.png')}" height="20px"/>
                                    </span>       
                                </div>                         
                                <div id="routeStopHeader">
                                    <span id="routeDetailTitle">Route Detail</span>

                                    <div class="routeAction" ng-class="activeRoute.routeStops.length > 0 ? '' : 'routeActionDisabled'" ng-click="openInMapquest()" title="{!$Label.Edit_this_Route_at_MapQuest}">
                                        <img src="{!URLFOR($Resource.images, '/mq-small-logo.png')}" height="20px"/>
                                    </div>
                                    <div class="routeAction" ng-class="activeRoute.routeStops.length > 0 ? '' : 'routeActionDisabled'" ng-click="openInGoogle()" title="{!$Label.Edit_this_Route_at_Google_Maps}">
                                        <img src="{!URLFOR($Resource.images, '/goog-small-logo.png')}" height="20px"/>
                                    </div>
                                    <div class="routeAction" ng-class="activeRoute.routeStops.length == 0 ? '' : 'routeActionDisabled'" ng-click="showRouteCalendaring()" title="Import Calendar">
                                        <img src="{!URLFOR($Resource.images, 'map/calendar.png')}" height="20px"/>
                                    </div>
                                    <div class="routeAction" ng-class="activeRoute.id ? '' : 'routeActionDisabled'" ng-click="showRouteSubSection('share')" title="Ownership &amp; Sharing" style="width: 23px;">
                                        <img src="{!URLFOR($Resource.images, 'map/people.png')}" height="20px"/>
                                        <div class="routeHasShares" ng-show="numberOfRouteShares() > 0"></div>
                                    </div>
                                    <div class="routeAction" ng-class="activeRoute.routeStops.length > 0 ? '' : 'routeActionDisabled'" title="{!$Label.Print_this_Route_To_PDF}">
                                        <apex:commandLink onfocus="blur()" onclick="javascript: if(gp_UIElem.hidden_htmlDirections.value==''){alert('{!$Label.You_must_have_created_a_route_by_clicking_Get_Route}'); return false;} gp_trackRoutePDF();" 
                                                            action="{!printRoute}" target="_blank">
                                            <apex:image url="{!URLFOR($Resource.geopointe__images, 'map/print.png')}" title="{!$Label.Print_this_Route_To_PDF}" alt="{!$Label.Print_this_Route_To_PDF}" height="20px"/>
                                        </apex:commandLink>
                                    </div>
                                    <div class="routeAction" ng-class="activeRoute.routeStops.length > 0 ? '' : 'routeActionDisabled'" ng-click="clearRoute()" title="Clear Route">
                                        <img src="{!URLFOR($Resource.images, 'map/circleX.png')}" height="20px"/>
                                    </div>
                                    <div class="routeAction" ng-click="routeSubSection = 'save'" title="{!$Label.Save_Route}">
                                        <img src="{!URLFOR($Resource.images, 'map/disk.png')}" height="20px"/>
                                    </div>
                                </div>
                                <div class="gp_clearer"/>

                                <!-- Route Saving -->
                                <div class="routeSubSection" ng-show="routeSubSection == 'save'">
                                    <span class="topRightClose" ng-click="routeSubSection = ''">
                                        <img src="{!URLFOR($Resource.images, 'map/blackX.png')}" height="15px"/>
                                    </span>

                                    <span class="routeSubSectionTitle noMarginTop">{!$Label.Save_Route}</span>

                                    <div class="routeSubSectionContent">
                                        <span class="routeSaveName">Name:</span>
                                        <input type="text" ng-model="activeRoute.name" id="routeSaveNameInput" class="gp-input"/>

                                        <div id="routeSaveBtns">
                                            <input type="button" class="gp-btn btn-sm" ng-if="!activeRoute.id || activeRoute.access == 'edit'" ng-click="saveRoute(false);" value="{!$Label.Save}"/>
                                            <input type="button" class="gp-btn btn-sm" ng-if="activeRoute.id" ng-click="saveRoute(true)" value="{!$Label.Save_As}"/>
                                        </div>
                                    </div>
                                </div>

                                <!-- Route Options -->
                                <div class="routeSubSection" ng-show="routeSubSection == 'routeOptions'">
                                    <span class="topRightClose" ng-click="routeSubSection = ''">
                                        <img src="{!URLFOR($Resource.images, 'map/blackX.png')}" height="15px"/>
                                    </span>

                                    <span class="routeSubSectionTitle noMarginTop">{!$Label.Route_Options}</span>

                                    <div class="routeSubSectionContent">
                                        <span class="routeOptionLabel">{!$Label.Type}:</span>
                                        <select id="routeType" ng-model="routeOptions.type" size="1" ng-options="c.value as c.label for c in routeTypeOptions">
                                        </select>

                                        <div ng-if="mapProvider == 'MapQuest'" style="margin-top: 4px;">
                                            <span class="routeOptionLabel">Thumbnails:</span>
                                            <input type="checkbox" ng-model="routeOptions.thumbnails"/>
                                        </div>

                                        <table cellspacing="0" cellpadding="0" width="100%" style=" margin-top: 6px;">
                                            <tr>
                                                <td class="alignTop">
                                                    <div>
                                                        <span class="routeOptionLabel">Avoid</span><br/> 
                                                        
                                                        <div class="routeAvoidOptionRow" ng-if="mapProvider == 'Google'"><input type="checkbox" ng-model="routeOptions.avoidHighways" class="routeAvoidCheckbox"/>Highways</div>
                                                        
                                                        <div class="routeAvoidOptionRow"><input type="checkbox" class="routeAvoidCheckbox" ng-model="routeOptions.avoidTolls"/>Tolls</div>
                                                    </div>
                                                </td>
                                                <td class="alignTop">
                                                    <div>
                                                        <span class="routeOptionLabel">Distance Units</span><br/>
                                                        <input type="radio" ng-model="routeOptions.units" value="m"/>miles<br/>
                                                        <input type="radio" ng-model="routeOptions.units" value="k"/>km<br/>
                                                    </div>
                                                </td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>

                                <!-- Route Sharing -->
                                <div class="routeSubSection" ng-show="routeSubSection == 'share'">
                                    <span class="topRightClose" ng-click="routeSubSection = ''">
                                        <img src="{!URLFOR($Resource.images, 'map/blackX.png')}" height="15px"/>
                                    </span>

                                    <span class="routeSubSectionTitle noMarginTop">Owner</span>

                                    <span ng-if="activeRoute.access == 'edit'">
                                        <select ng-model="activeRoute.owner.id" style="max-width: 245px" ng-options="user.id as user.name for user in geopointeUsers"> 
                                        </select>
                                        <input type="button" class="gp-btn btn-sm" ng-click="updateRouteOwner()" value="Change Owner"/><br/>
                                        <div ng-show="showRouteAccessOwnerMsg" id="routeAccessOwnerMsg">
                                            <div>Owner changed but visibility to this route will be lost.</div>
                                            <a ng-click="createRouteShare('currentUser')">To keep Read Only access to this route click here.</a>
                                        </div>
                                    </span>
                                    <div id="routeOwnerName" ng-if="activeRoute.access != 'edit'">
                                        {{activeRoute.owner.name}}
                                    </div>

                                    <span class="routeSubSectionTitle">Sharing</span>

                                    <div ng-if="activeRoute.access == 'edit'">
                                        <select ng-model="newRouteShareUserId" style="max-width: 245px" ng-options="user.id as user.name for user in geopointeUsers"> 
                                        </select>
                                        <input type="button" class="gp-btn btn-sm" ng-click="createRouteShare(newRouteShareUserId);" ng-disabled="!newRouteShareUserId" value="Add Share"/>
                                    </div>

                                    <div id="routeShareMsg" ng-if="activeRoute.routeShares.length > 0">The following Users have Read Only access to this route:</div>
                                    <div id="routeShareMsg" ng-if="activeRoute.routeShares.length == 0">This route is not shared with any users.</div>

                                    <table ng-show="activeRoute.routeShares.length > 0" class="list routeShareTable" cellspacing="0" cellpadding="0">
                                        <tr ng-repeat="rs in activeRoute.routeShares | orderBy:'userName' track by rs.id">
                                            <td width="20px" ng-if="activeRoute.access == 'edit'">
                                                <a class="actionLink" ng-show="!rs.isDeleted" ng-click="deleteRouteShare(rs.id)">Del</a>
                                                <img class="undeleteRowIcon" ng-show="rs.isDeleted" ng-click="undeleteRouteShare(rs.id)" title="Undelete" src="{!URLFOR($Resource.images, 'map/undo.png')}"/>
                                            </td>
                                            <td ng-class="rs.isDeleted ? 'routeShareDeleted': ''">{{rs.userName}}</td>
                                        </tr>
                                    </table>
                                </div>

                                <!-- Route Calendaring -->
                                <div class="routeSubSection" ng-show="routeSubSection == 'calendar'">
                                    <span class="topRightClose" ng-click="routeSubSection = ''; eventsUnableToImport = []">
                                        <img src="{!URLFOR($Resource.images, 'map/blackX.png')}" height="15px"/>
                                    </span>
                                    <span class="routeSubSectionTitle noMarginTop">Import Calendar <span style="font-size: 13px; font-weight: normal;">(Beta)</span></span>

                                    <div style="padding: 2px 4px;">
                                        Import will perform a one time copy of events on the selected date. New events created will not show up in route. 
                                    </div>

                                    <div class="routeSubSectionContent">

                                        <span style="font-size: 13px;">Date: </span><input ui-date="routeImportDateOptions" class="gp-input" ng-model="routeCalendarDate" size="8"/>
                                        <input class="gp-btn btn-sm" ng-click="importRouteFromCalendar();" type="button" value="Import"/>

                                        <div ng-if="showNoEventsToImportMsg" class="routeWarning" style="margin-top: 7px;">
                                            There were no events to import on the selected date.
                                        </div>

                                        <div ng-if="eventsUnableToImport.length > 0" class="routeWarning" style="margin-top: 7px;">
                                            <div class="unableToImportEventsMsg">The following events could not be imported:</div>

                                            <div ng-repeat="e in eventsUnableToImport">
                                                <img src="{!URLFOR($Resource.images, 'map/help2x.png')}" title="{{e.message}}" height="14px" class="eventsUnableToImportMsgImg" />
                                                {{e.event.Subject}} ({{e.event.StartDateTime | amDateFormat:'LT'}} - {{e.event.EndDateTime | amDateFormat:'LT'}})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div id="routeListWrapper" ng-class="routeSubSection != '' ? 'opacity2' : ''">
                                <div id="optimizeRouteWrapper">
                                    <img src="{!URLFOR($Resource.images, 'map/info.png')}" height="15px" id="gp_hoverhelp_optimizeRouteInfo" class="gp_hoverhelp"/>
                                    {!$Label.Optimize}: <input type="checkbox" ng-model="routeOptions.optimize" style="position:relative; top:2px;"/>
                                </div>
                                <div id="routeOptionsWrapper">
                                    <span ng-click="routeSubSection = 'routeOptions'" id="routeOptionsLink">
                                        {!$Label.Route_options}
                                    </span>
                                </div>
                                <div class="gp_clearer"/>

                                <div id="loadCalendarRouteMsg" class="routeWarning" ng-if="activeRoute.calendarRoute == true && activeRoute.justImported != true" style="margin-top:2px;">
                                    This route was imported from the calendar. It may not contain events modified or created since import.
                                </div>

                                <ul id="routeList" class="basicList routeList" ui-sortable="sortableRouteOptions" ng-model="activeRoute.routeStops"
                                ng-mouseenter="disablePageScroll()" ng-mouseleave="enablePageScroll()">
                                    <li ng-repeat="r in activeRoute.routeStops track by $index" ng-click="selectRouteStop(r)" class="{{selectedRouteStop.id == r.id ? 'routeStopSelected' : ''}}"
                                        ng-class="{'routeStopLate' : getArrivalWarningStatus($index) == 'late', 'routeStopOntimeWarning' : getArrivalWarningStatus($index) == 'onTimeWarning'}"
                                    >    

                                        <table cellspacing="0" width="100%">
                                            <tr>
                                                <td width="17px" class="{{r.id == 'currentLocation' ? '' : 'alignTop'}}">
                                                    <img ng-if="mapProvider == 'Google'" class="routeListPinIcon" ng-src="https://mts.googleapis.com/vt/icon/name=icons/spotlight/spotlight-waypoint-{{$last ? 'b' : 'a'}}.png&text={{numAlphaMap[$index]}}&psize=16&font=fonts/Roboto-Regular.ttf&color=ff333333&ax=44&ay=48&scale=2"/>
                                                    <img ng-if="mapProvider == 'MapQuest'" class="routeListPinIcon routeListPinIconMQ" ng-src="https://www.mapquestapi.com/staticmap/geticon?uri=stop-{{numAlphaMap[$index]}}.png"/>
                                                </td>
                                                <td>
                                                    <div class="routeListStopName">
                                                        <input ng-show="routeStopEditId == r.id" type="text" ng-model="r.name" size="30" class="gp-input" style="margin-bottom: 3px;" />
                                                        <span ng-show="routeStopEditId != r.id">
                                                            <span ng-if="r.source != 'sfdc' || (r.source == 'sfdc' && !r.sourceId)">{{r.name}} <span ng-if="r.name2"> - {{r.name2}}</span></span>
                                                            <span ng-if="r.source == 'sfdc' && r.sourceId"><a ng-href="/{{r.sourceId}}" target="_blank">{{r.name}} <span ng-if="r.name2"> - {{r.name2}}</span></a></span>
                                                        </span>
                                                    </div>
                                                    <div class="routeStopAddress">
                                                        <img src="{!URLFOR($Resource.images, '/warning18.png')}" height="10px" class="routeStopGeocodeQualityIcon" 
                                                            ng-if="getGeocodeQualityStatus(r.geocodeQuality) == 'poor'" title="{!$Label.Geocode_Quality}: {{r.geocodeQuality}}"/>
                                                        <img src="{!URLFOR($Resource.images, '/error18.png')}" height="10px" class="routeStopGeocodeQualityIcon" 
                                                            ng-if="getGeocodeQualityStatus(r.geocodeQuality) == 'bad'" title="{!$Label.Geocode_Quality}: {{r.geocodeQuality}}"/>

                                                        <div>{{r.singleLineAddress}}</div>

                                                        <div ng-show="routeStopEditId != r.id && r.startTime >= 0 && r.endTime >= 0">
                                                            <span class="routeTimeOutput">{{r.startTime | amDateFormat:'LT'}} - {{r.endTime | amDateFormat:'LT'}}</span>
                                                        </div>

                                                        <div ng-show="routeStopEditId == r.id">
                                                            <select ng-model="r.startTime" ng-options="dt.getTime() as (dt | amDateFormat:'LT') for dt in getStartTimes($index)"
                                                                ng-focus="calculateStopDuration(r)" ng-change="startTimeChanged(r)"
                                                            >
                                                            </select> - 
                                                            <select ng-model="r.endTime" ng-options="dt.getTime() as (dt | amDateFormat:'LT') for dt in getEndTimes(r.startTime)"
                                                                ng-focus="calculateStopDuration(r)" ng-change="calculateStopDuration(r)"
                                                            ></select>
                                                        </div>

                                                        <div class="routeStopArrivalTimeWarning" ng-show="getArrivalWarningStatus($index) == 'late' || getArrivalWarningStatus($index) == 'onTimeWarning'">
                                                            Estimated arrival time:  {{getArrivalTime($index) | amDateFormat:'LT'}}
                                                        </div>
                                                    </div>
                                                </td>
                                                <td width="80px" style="vertical-align: top">
                                                    <div class="routeListRightIcon routeListDragHandle">
                                                        <img src="{!URLFOR($Resource.images, '/map/drag.png')}" height="20px"/>
                                                    </div>
                                                    <div class="routeListRightIcon removeRouteStopIcon" ng-click="removeRouteStop(r.id)" ng-show="routeStopEditId == r.id ? false : true">
                                                        <img src="{!URLFOR($Resource.images, '/map/grayX.png')}" height="15px"/>
                                                    </div>
                                                    <div class="routeListRightIcon routeListEditIcon" ng-click="editRouteStop(r.id)">
                                                        <img src="{!URLFOR($Resource.images, '/map/pencil.png')}" height="16px"/>
                                                    </div>
                                                </td>
                                            </tr>
                                        </table>
                                        <div class="routeStopActions" ng-if="selectedRouteStop.id == r.id">
                                            <button class="btn btn-secondary">From Current Location</button>
                                            <button class="btn btn-secondary">From Previous Stop</button>
                                            <button class="btn btn-secondary" ng-click="removeRouteStop(r.id)">Remove Stop</button>
                                        </div>
                                    </li>
                                </ul>
                            </div>

                            <div id="routeTabBottom">
                                <input ng-click="getRoute()" class="gp-btn btn-primary" id="buttonGetRoute" value="{!$Label.Get_Route}" type="button" />
                            </div>
                        </div>

                    </div>
                    <div class="mapControlTab" id="routeControlTab">
                        <div class="mapControlTabInner">
                            <div class="mapControlTabTopShadow">
                                <div class="mapControlTabTopShadow1"/>
                                <div class="mapControlTabTopShadow2"/>
                                <div class="mapControlTabTopShadow3"/>
                            </div>

                            <img class="mapControlTabIcon" src="{!URLFOR($Resource.images, 'map/routes2x.png')}" title="{!$Label.Routes}"/>
                            <div id="routeCount" class="countBubble" ng-show="activeRoute.routeStops.length">{{activeRoute.routeStops.length}}</div>
                        </div>
                    </div>
                </div><!-- End routes map control -->
          
                <div class="mapControl noHeightSet legendController" name="legend" id="legendPanel" ng-controller="LegendController" style="visibility: hidden;">
                    <div class="mapControlContent">
                        <div class="mapControlHeader">
                            {!$Label.Map_Legend}
                            <span class="ui-icon ui-icon-triangle-1-n collapseControlIcon" title="{!$Label.Collapse_Panel}"></span>
                        </div>
                        <div id="legendContent" disable-page-scroll-on-hover="true">
                            <div class="dataSetLegendGroup" ng-repeat="dsLeg in legendGroups()">
                                <span class="dataSetLegendTitle">
                                    {{dsLeg.dataSetName}} 
                                    <span ng-if="dsLeg.colorByField.label" class="legendColorByFieldTitle">&nbsp;({{dsLeg.colorByField.label}})</span>
                                </span>
                                <div class="legendIcon" ng-repeat="legendItem in dsLeg.items | orderBy:orderByValue">
                                    
                                    <div class="legendIconImg"><img ng-src="{{legendItem.url}}"/></div>
                                    
                                    <!-- format output correctly based on field type -->
                                    <div class="legendIconLabel" ng-if="legendItem.fieldType != 'DATE' && legendItem.fieldType != 'DATETIME'">{{legendItem.value}}</div>
                                    <div class="legendIconLabel" ng-if="legendItem.fieldType == 'DATE'">{{legendItem.value | amDateFormat:'l'}}</div>
                                    <div class="legendIconLabel" ng-if="legendItem.fieldType == 'DATETIME'">{{legendItem.value | amDateFormat:'l LT'}} </div>
                                </div>
                                <div class="clear"/>
                            </div>
                        </div>
                    </div>
                    <div class="mapControlTab" id="legendControlTab">
                        <div class="mapControlTabInner">
                            <div class="mapControlTabTopShadow">
                                <div class="mapControlTabTopShadow1"/>
                                <div class="mapControlTabTopShadow2"/>
                                <div class="mapControlTabTopShadow3"/>
                            </div>

                            <img class="mapControlTabIcon" src="{!URLFOR($Resource.images, 'map/legend2x.png')}" title="{!$Label.Legend}"/>
                        </div>
                    </div>
                </div>
			
                <div id="recordSelectionModeMsg">
                    <strong>Currently in Record Selection Mode.</strong><br/> Click or touch a map pin to selected it. In the "Apply Action To" picklist below choose "Selected Records" and then choose an Action.
                </div>
				
				<div id="mapShadowTop"></div>
				
                <div id="mapDIV" style="width: 100%; height: 100%;"></div>
				
			</div> <!--End Map Wrapper-->
                        
            <!-- The Data Table DIV -->
            <div class="gp_clearer"></div>
            <div id="dataTableDIV" style="width: 100%;">

                <!-- Mass mapped data actions -->
                <table border="0" cellpadding="0" cellspacing="0" width="100%" class="pbHeaderCustom">
                    <tbody>
                        <tr>
                            <td class="pbTitle" width="30%">
                                <span id="mappedDataTitle"><h2>{!$Label.Mapped_Data}</h2></span>
                                <span id="gp_dataTablesNoData">{!$Label.No_records_have_been_mapped}</span>
                            </td>
                            <td class="pbButton" width="70%">
                                <table cellpaddin="0" cellspacing="0" id="mappedDataButtons">
                                    <tr>
                                        <td>
                                            {!$Label.Apply_Action_To}:
                                            <select id="applyActionTo">
                                                <option value="allTabs">{!$Label.All_Tabs}</option>
                                                <option value="selectedTab">{!$Label.Selected_Tab}</option>
                                                <option value="selectedRecords">{!$Label.Selected_Records}</option>
                                            </select>
                                        </td>
                                        <td>
                                            <div id="selectRecordsModeBtn" title="Enter Record Selection Mode" class="btn" onclick="toggleRecordSelectionMode();">
                                                <img src="{!URLFOR($Resource.images, '/checkbox_checked.gif')}"/>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="multiButtonWrapper" id="dataSetSearchActionBtn">
                                                <span class="gpButton openMultiButtonOptions" data-afterShow="setListActionButtonWidths();"> <!--setupActionButtonPanel() map.actions.js-->
                                                    <div class="multiButtonInner multiButtonLeftLarge noRightBorder">
                                                        {!$Label.Actions}
                                                    </div>
                                                    <div class="multiButtonInner multiButtonRightLarge">
                                                        <span class="ui-icon ui-icon-triangle-1-n"></span>
                                                    </div>
                                                </span>
                                                <div class="multiButtonContent upRight" style="display: none; background-color: white;"> 
                                                    <div id="actionButtonPanel">
                                                        <!--Custom Apex Actions will be placed here by map.actions.js -->
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <img class="gp_hoverhelp" id="gp_hoverhelp_DataListButtons" src="{!URLFOR($Resource.images, 'map/help2x.png')}" alt=""/>
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </tbody>
                </table>

                <!-- jQuery Data Table DIV -->
                <div id="gp_dataTables" width="100%" style="display: none;">
                    <!--Tabs-->
                    <div id="gp_dataTableTabs">
                        <ul>
                        </ul>
                    </div>
                </div>

            </div><!-- End of DataTableDIV -->
            
            <!-- MapQuest Terms and Conditions  -->
            <apex:outputPanel id="mqLegalDIV" style="padding: 0 auto; font-size: 8pt; text-align: center;" layout="block" rendered="{!mapProvider='MapQuest'}">
                <p><a href="http://cdn.mapquest.com/mq_legal/termsofuse.html" target="_blank">MapQuest Terms and Conditions</a></p>
                <p><i>Maps/Directions are informational only. User assumes all risk of use. MapQuest, Arrowpointe, and 
                their suppliers make no representations or warranties about content, road conditions, route usability, 
                or speed.</i></p>
            </apex:outputPanel>
        </apex:outputPanel>
        
        <!-- ACTION FUNCTIONS -->
        
        <!-- Search for Nearby Records -->
        <apex:actionFunction name="gp_searchNearbyRecords"
            action="{!searchRecords}" 
            rerender="dynamicJavaScript,pageMessages,colorLegendDIV" 
            oncomplete="javascript:gp_AffectMap();">
            <apex:param name="mapCenterLat"  assignTo="{!mapCenterLat}" value="" />
            <apex:param name="mapCenterLng"  assignTo="{!mapCenterLng}" value="" />
            <apex:param name="searchType"  assignTo="{!searchType}" value="nearby" />
        </apex:actionFunction>
        
        <!-- Search Map Bounds -->
        <apex:actionFunction name="gp_searchNearbyRecordsInBounds"
            action="{!searchRecords}"
            rerender="dynamicJavaScript,pageMessages,colorLegendDIV" 
            oncomplete="javascript:gp_AffectMap();">
            <apex:param name="minLatSearch"  assignTo="{!minLatSearch}" value="" />
            <apex:param name="maxLatSearch"  assignTo="{!maxLatSearch}" value="" />
            <apex:param name="minLngSearch"  assignTo="{!minLngSearch}" value="" />
            <apex:param name="maxLngSearch"  assignTo="{!maxLngSearch}" value="" />
            <apex:param name="currZoomLevel"  assignTo="{!currZoomLevel}" value="" />
            <apex:param name="searchType"  assignTo="{!searchType}" value="bounds" />
        </apex:actionFunction>
        
        <!-- Map All Records -->
        <apex:actionFunction name="gp_mapRecords"
            action="{!searchRecords}" 
            rerender="dynamicJavaScript,pageMessages,colorLegendDIV" 
            oncomplete="javascript:gp_AffectMap();">
            <apex:param name="searchType"  assignTo="{!searchType}" value="records" />
        </apex:actionFunction>
        
        <!-- Write back selection to the originating record -->
        <apex:actionFunction name="gp_writeBackSelection" 
            action="{!writeBackSelection}"
            rerender="pageMessages"
            oncomplete="geopointeAjaxEnd(); jQuery.jGrowl(gp_translations.Originating_record_successfully_updated);">
            <apex:param name="wrkRecordID"  assignTo="{!wrkRecordID}" value="" />
        </apex:actionFunction>
        
        <!-- Save Location -->
        <apex:actionFunction name="gp_saveNewLocation" rerender="myLocationsContent" action="{!insertLocation}" 
            oncomplete="setMyLocationsTableMaxHeight(); geopointeAjaxEnd(); jQuery.jGrowl(gp_translations.Location_Successfully_Saved, { life: 5000 });">
            <apex:param name="locationJSON" assignTo="{!locationJSON}" value="" />
        </apex:actionFunction>

        <!-- Refresh Filters -->
        <apex:actionFunction name="gp_emptyActionFunction"
            action="{!emptyActionFunction}" 
            rerender="dummyPanel" >
        </apex:actionFunction>

        <apex:actionFunction name="gp_rerenderShapeListAdd" action="{!resetShapeList}" rerender="shapeList" oncomplete="geopointeAjaxEnd(); jQuery.jGrowl(gp_translations.Shape_Successfully_Saved, { life: 4000 });">
            <apex:param name="selectedShapeId" assignTo="{!selectedShapeId}" value="" />
        </apex:actionFunction>

        <apex:actionFunction name="gp_rerenderShapeListRemove" action="{!resetShapeList}" rerender="shapeList" oncomplete="geopointeAjaxEnd(); jQuery.jGrowl(gp_translations.Shape_Deleted, { life: 3000 });"/>

        <apex:outputPanel id="dummyPanel"></apex:outputPanel>
        
        <!-- HIDDEN DATA -->
        <apex:outputPanel id="hiddenDIV">

			<!-- Populated when the route is generated -->
			<apex:inputHidden id="hidden_htmlDirections" value="{!htmlDirections}" />
				<script> gp_UIElem.hidden_htmlDirections = document.getElementById("{!$Component.hidden_htmlDirections}"); </script>
			
			<!-- Populated as the user interacts with the Color Markers By field -->
			<apex:inputHidden id="hidden_colorMarkersBy" value="{!colorMarkersBy}"/>
				<script> gp_UIElem.hidden_colorMarkersBy = document.getElementById("{!$Component.hidden_colorMarkersBy}"); </script>
				
			<!-- A place to put SOQL that will dynamically affect the map query. This can only be populated if it's injected into the page via plugins -->
			<apex:inputHidden id="hidden_customSOQL" value="{!customSOQL}"/>
				<script> gp_UIElem.hidden_customSOQL = document.getElementById("{!$Component.hidden_customSOQL}"); </script>
			
		</apex:outputPanel>
		
    </apex:form>
    </div><!-- End ngApp wrapper div -->

    <!-- Get CSV -->
    <form name="gp_getCSV" method="POST" action="{!URLFOR($Site.Prefix+'/apex/exportCSV?core.apexpages.devmode.url=1')}">
        <input type="hidden" id="gp_csvData" name="gp_csvData"/>
    </form>

    <!-- Get KML -->
    <form name="gp_getKML" method="POST" action="{!URLFOR($Site.Prefix+'/apex/exportKML?core.apexpages.devmode.url=1')}">
        <input type="hidden" id="gp_kmlData" name="gp_kmlData"/>
    </form>
    
    <!-- Settings -->
    <div id="settingsPanel" style="display:none;">
        <table cellpadding="0" cellspacing="8" style="margin: auto;">
            <tr>
                <td class="settingsSection">
                    <div>
                        <span class="fieldSetTitle">{!$Label.Preferences} <img src="{!URLFOR($Resource.images, 'map/help2x.png')}" class="gp_hoverhelp" id="gp_hoverhelp_settingsPref"/></span>
                        <div class="fieldSetContent">
                            <table>
                                <tr>
                                    <td class="settingsLabel">{!$Label.Use_Geolocation}</td>
                                    <td><input id="mySettingsUseGeolocation" type="checkbox"/></td>
                                </tr>
                                <tr>
                                    <td class="settingsLabel">{!$Label.Hide_Sidebar}</td>
                                    <td><input id="mySettingsHideSidebar" type="checkbox"/></td>
                                </tr>
                                <tr>
                                    <td class="settingsLabel">{!$Label.Scrollwheel_Zoom}</td>
                                    <td><input id="mySettingsScrollwheelZoom" type="checkbox"/></td>
                                </tr>
                                <tr>
                                    <td class="settingsLabel">{!$Label.Number_Map_Pins}</td>
                                    <td><input id="mySettingsNumberPins" type="checkbox"/></td>
                                </tr>
                                <tr>
                                    <td class="settingsLabel">{!$Label.Close_Tabs_on_Search}</td>
                                    <td><input id="mySettingsCloseTabsOnSearch" type="checkbox"/></td>
                                </tr>
                                <tr>
                                    <td class="settingsLabel">{!$Label.Start_Tab}</td>
                                    <td>
                                        <select id="mySettingsStartTab">
                                            <option value ="">--None--</option>
                                            <option value ="datasets">{!$Label.Data_Sets}</option>
                                            <option value ="search">{!$Label.Search}</option>
                                            <option value ="layers">{!$Label.Layers}</option>
                                            <option value ="locations">{!$Label.My_Locations}</option>
                                            <option value ="routes">{!$Label.Routes}</option>
                                        </select>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="settingsLabel">{!$Label.Map_Height}</td>
                                    <td>
                                        <select id="mySettingsMapHeight">
                                            <option value ="auto">{!$Label.Auto}</option>
                                            <option value ="300">300</option>
                                            <option value ="400">400</option>
                                            <option value ="500">500</option>
                                            <option value ="600">600</option>
                                            <option value ="700">700</option>
                                            <option value ="800">800</option>
                                            <option value ="900">900</option>
                                            <option value ="1000">1000</option>
                                            <option value ="1100">1100</option>
                                            <option value ="1200">1200</option>
                                        </select>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </td>
                <td class="settingsSection">
                    <div>
                        <span class="fieldSetTitle">{!$Label.Starting_Map_Position} <img src="{!URLFOR($Resource.images, 'map/help2x.png')}" class="gp_hoverhelp" id="gp_hoverhelp_settingsStart"/></span>
                        <div class="fieldSetContent">
                            <table>
                                <tr>
                                    <td class="settingsLabel">{!$Label.Starting_Latitude}:</td>
                                    <td class="settingsValue"><span id="mySettingsStartingLatitude"></span></td>
                                </tr>
                                <tr>
                                    <td class="settingsLabel">{!$Label.Starting_Longitude}:</td>
                                    <td class="settingsValue"><span id="mySettingsStartingLongitude"></span></td>
                                </tr>
                                <tr>
                                    <td class="settingsLabel">{!$Label.Starting_Zoom}:</td>
                                    <td class="settingsValue"><span id="mySettingsStartingZoom"></span></td>
                                </tr>
                                <tr>
                                    <td colspan="2" class="settingsValue"><input class="btn" id="mySettingsSetMapAsHome" value="{!$Label.Set_Starting_Position}" type="button" /></td>
                                </tr>
                            </table>
                        </div>
                     </div>
                </td>
                <td class="settingsSection">
                    <div>
                        <span class="fieldSetTitle">{!$Label.Pinned_Tabs} <img src="{!URLFOR($Resource.images, 'map/help2x.png')}" class="gp_hoverhelp" id="gp_hoverhelp_pinnedTabs" /></span>
                        <div class="fieldSetContent">
                            <div id="pinnedTabsTable">
                                <apex:panelGrid columns="4" columnClasses="settingsLabel,settingsValue" width="100%">
                                    <apex:outputLabel value="{!$Label.Data_Sets}"/>
                                    <apex:outputPanel ><input type="checkbox" value="dataSetPanel"/></apex:outputPanel>

                                    <apex:outputLabel value="{!$Label.Search}"/>
                                    <apex:outputPanel ><input type="checkbox" value="searchPanel"/></apex:outputPanel>

                                    <apex:outputLabel value="{!$Label.Layers}" rendered="{!mapProvider == 'Google'}"/>
                                    <apex:outputPanel rendered="{!mapProvider == 'Google'}"><input id="pinLayersPanelCheckbox" type="checkbox" value="layersPanel"/></apex:outputPanel>

                                    <apex:outputLabel value="{!$Label.My_Locations}"/>
                                    <apex:outputPanel ><input type="checkbox" value="locationsPanel"/></apex:outputPanel>

                                    <apex:outputLabel value="{!$Label.Routes}"/>
                                    <apex:outputPanel ><input id="pinRoutePanelCheckbox" type="checkbox" value="routePanel"/></apex:outputPanel>
                                </apex:panelGrid>
                            </div>
                        </div>
                    </div>
                </td>
                <td class="settingsSection">
                    <div>
                        <span class="fieldSetTitle">{!$Label.Check_In} <img src="{!URLFOR($Resource.images, 'map/help2x.png')}" class="gp_hoverhelp" id="gp_hoverhelp_settingsCheckIn" /></span>
                        <div class="fieldSetContent">
                            <table>
                                <tr>
                                    <td class="settingsLabel">{!$Label.Quick_Check_In}</td>
                                    <td><input id="mySettingsQuickCheckIn" type="checkbox"/></td>
                                </tr>
                                <tr>
                                    <td class="settingsLabel">{!$Label.Quick_Check_Out}</td>
                                    <td><input id="mySettingsQuickCheckOut" type="checkbox"/></td>
                                </tr>
                                <tr>
                                    <td class="settingsLabel">{!$Label.Share_on_Feed}</td>
                                    <td><input id="mySettingsCheckInShareOnFeed" type="checkbox"/></td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </td>
            </tr>
        </table>
    </div><!--End Settings -->

    <!-- Help -->
    <div name="help" id="helpPanel" style="display:none;">
        <img id="gpHelpLogo" src="{!URLFOR($Resource.images, 'geopointe-logo.png')}" height="43px"/>

        <div>Need help with Geopointe? Check out these great support resources.</div>
        
        <ul id="gpHelpList">
            <li><a href="http://youtube.com/arrowpointe" target="_blank">Videos</a> - Learn about the <a href="https://www.youtube.com/watch?v=9ZeGxMrAO9A" target="_blank">new Search Data Sets UI</a>, <a href="https://www.youtube.com/watch?v=SMFEBBs4GKI" target="_blank">Salesforce 1</a> or <a href="http://www.youtube.com/watch?v=JRP6HAn8RvI" target="_blank">analytics</a></li>
            <li><a href="http://support.arrowpointe.com" target="_blank">Support Center</a> - Access all of the help resources</li>
            <li><a href="http://arrowpointe.uservoice.com" target="_blank">Ideas</a> - Let us know what features you want to see in Geopointe</li>
            <li><a href="http://geopointe.mobi" target="_blank">Geopointe Mobile</a> - Use Geopointe on your mobile device</li>
            <li><a href="http://www.arrowpointe.com/products/geopointe/webinars/" target="_blank">Attend a Webinar</a> - We hold regular webinars to teach you about Geopointe</li>
            <li><a href="http://support.arrowpointe.com/email-list/" target="_blank">Join our Email List</a> - Stay updated about Geopointe</li>
            <li><a href="http://arrowpointe.com/blog" target="_blank">Read our Blog</a> - Stay updated about Geopointe</li>
        </ul>
    </div>      
	
	<!-- Hover Help Content -->
	<div id="gp_hoverhelpContent" style="display:none;">
		<span id="gp_hoverhelp_DataSetSelection">
			<div><b>{!$Label.Data_Set}</b>: {!$Label.Help_Data_Set_Selection}
			</div>
            <div><b>{!$Label.Save}</b>: {!$Label.Help_Data_Set_Save}</div>
            <div><b>{!$Label.Settings_Icon_Gear}</b>: {!$Label.Help_Data_Set_Settings_Icon_Gear}</div>
            <div><b>{!$Label.Clear_Existing}</b>: {!$Label.Help_Clear_Exisiting}</div>
            <div><b>{!$Label.Marker_Color}</b>: {!$Label.Help_Marker_Color}</div>
            <div><b>{!$Label.Color_Markers_By}</b>: {!$Label.Help_Color_Markers_By}</div>
            <div><b>{!$Label.Show}</b>: {!$Label.Help_Data_Set_Show_Filter}</div>
			<div><b>{!$Label.More_Filters}/{!$Label.Hide_Filters}</b>: {!$Label.Help_Data_Set_Show_Hide_Filters}</div>
		</span>
        <span id="gp_hoverhelp_DataSetSettings">
            <div>{!$Label.Help_Data_Set_Edit_Overview} </div>
            <div><b>{!$Label.Data_Set_Access}</b>: {!$Label.Help_Data_Set_Edit_Access}</div>
            <div><b>{!$Label.Available_in_Visualize}</b>: {!$Label.Help_Data_Set_Edit_Available_in_Visualize}</div>
            <div><b>{!$Label.One_Column_Address}</b>: {!$Label.Help_Data_Set_Edit_One_Column_Address}</div>
        </span>
        <span id="gp_hoverhelp_DataSetFields">
            <div>{!$Label.Help_Data_Set_Fields1}</div>
            <div>{!$Label.Help_Data_Set_Fields2}</div>
        </span>
        <span id="gp_hoverhelp_NumberOfFields">
            <div>{!$ObjectType.Data_Set__c.Fields.Number_of_Fields_Displayed_in_Table__c.inlineHelpText}</div>
        </span>

		<span id="gp_hoverhelp_search">
			<div>
				<strong><u>{!$Label.Radial_Search}</u></strong><br/>
				{!$Label.Help_Radial_Search_Overview}
			</div>
            <div style="display: {!IF(mapProvider == 'Google','','none')}">
                <strong><u>{!$Label.Shape_Search}</u></strong><br/>
                {!$Label.Help_Shape_Search}
            </div>
			<div>
				<strong><u>{!$Label.Viewable_Area}</u></strong><br/>
				{!$Label.Help_Viewable_Area}
			</div>
			<div>
				<strong><u>{!$Label.Entire_Data_Set}</u></strong><br/>
				{!$Label.Help_Entire_Data_Set}
			</div>
		</span>
        <span id="gp_hoverhelp_shapeTools">
            <table cellpadding="0" cellspacing="0">
                <tr>
                    <td class="helpIconCol"><img style="height: 25px;" src="{!URLFOR($Resource.images, 'map/openhand.png')}"/></td>
                    <td>
                        <div>{!$Label.Help_Hand_Tool}</div>
                    </td>
                </tr>
                <tr>
                    <td class="helpIconCol"><img style="height: 25px;" src="{!URLFOR($Resource.images, 'map/polygonBlue.png')}"/></td>
                    <td>
                        <div>{!$Label.Help_Blue_Polygon}</div>
                    </td>
                </tr>
            </table>
        </span>
        <span id="gp_hoverhelp_savedShapes">
            <div>{!$Label.Help_Personal_Shapes}</div>
        </span>
		<span id="gp_hoverhelp_DataListButtons">
			<div><b>{!$Label.Add_All_To_Route}</b>: {!$Label.Help_Add_All_To_Route}</div>
			<div><b>{!$Label.Add_To_Campaign}</b>: {!$Label.Help_Add_To_Campaign}</div>
			<div><b>{!$Label.Export_CSV}</b>: {!$Label.Help_Export_CSV}</div>
			<div><b>{!$Label.Export_KML}</b>: {!$Label.Help_Export_KML}</div>
		</span>
		<span id="gp_hoverhelp_PlacesSearch">
			<div><b>{!$Label.Address_Search}</b> {!$Label.Help_Address_Search}</div>
            <div><b>{!$Label.Places_Search}</b> {!$Label.Help_Places_Search}</div>
		</span>
		<span id="gp_hoverhelp_kmlLayers">
            <div>{!$Label.Help_KML_Layers1}</div>
            <div>{!$Label.Help_KML_Layers2} (<img width="8px" src="{!URLFOR($Resource.images, 'map/greendot.png')}"/>) {!$Label.Help_KML_Layers3}.</div>
            <div>{!$Label.Help_KML_Layers4}</div>
        </span>
        <span id="gp_hoverhelp_Demographics">
			<div>{!$Label.Help_Demographics1}</div>
			<div>{!$Label.Help_Demographics2}: 
				<ul>
					<li><b>{!$Label.Year}</b>: {!$Label.Help_Demographics_Year}</li>
					<li><b>{!$Label.Granularity}</b>: {!$Label.Help_Demographics_Granularity} </li>
					<li><b>{!$Label.Metric}</b>: {!$Label.Help_Demographics_Metric}</li>
				</ul>
				{!$Label.Help_Demographics3}
			</div>
		</span>
		<span id="gp_hoverhelp_OtherLayers">
			<div><b>{!$Label.Traffic}</b>: {!$Label.Help_Traffic}</div>
			<div><b>{!$Label.Transit}</b>: {!$Label.Help_Transit}</div>
			<div><b>{!$Label.Bicycling}</b>: {!$Label.Help_Bicycling}</div>
			<div><b>{!$Label.Weather}</b>: {!$Label.Help_Weather}</div>
		</span>
        <span id="gp_hoverhelp_myLocations">
            <div>{!$Label.My_Locations_Help1}</div>
            <div>{!$Label.My_Locations_Help2}</div>
        </span>
        <span id="gp_hoverhelp_settingsPref">
            <div><b>{!$Label.Use_Geolocation}</b>: {!$Label.Help_Use_Geolocation}</div>
            <div><b>{!$Label.Hide_Sidebar}</b>: {!$Label.Help_Hide_Sidebar}</div>
            <div><b>{!$Label.Scrollwheel_Zoom}</b>: {!$Label.Help_Scrollwheel_Zoom}</div>
            <div><b>{!$Label.Number_Map_Pins}</b>: {!$Label.Help_Number_Map_Pins}</div>
            <div><b>{!$Label.Close_Tabs_on_Search}</b>: {!$Label.Help_Close_Tabs_on_Search}</div>
            <div><b>{!$Label.Start_Tab}</b>: {!$Label.Help_Start_Tab}</div>
            <div><b>{!$Label.Map_Height}</b>: {!$Label.Help_Map_Height}</div>
        </span>
        <span id="gp_hoverhelp_settingsStart">
            <div>{!$Label.Help_Map_Start1}</div>
            <div>{!$Label.Help_Map_Start2}</div>
        </span>
        <span id="gp_hoverhelp_settingsCheckIn">
            <div><b>{!$Label.Quick_Check_In}</b>: {!$Label.Quick_Check_In_Help}</div>
            <div><b>{!$Label.Quick_Check_Out}</b>: {!$Label.Quick_Check_Out_Help}</div>
            <div><b>{!$Label.Share_on_Feed}</b>: {!$Label.Share_on_Feed_Help}</div>
        </span>
        <span id="gp_hoverhelp_pinnedTabs">
            <div>{!$Label.Help_Pinned_Tabs}</div>
        </span>
        <span id="gp_hoverhelp_dataSetFilters">
            <div>{!$Label.Help_Data_Set_Filters1}</div>
            <div>{!$Label.Help_Data_Set_Filters2}</div>
        </span>
        <span id="gp_hoverhelp_optimizeRouteInfo">
            <div>{!$Label.Optimize_Route_will_efficiently_order}</div>
        </span>
	</div>
	
	<!-- Gets rerendered to invoke JavaScript -->
    <apex:outputPanel id="dynamicJavaScript" rendered="{!initSuccess}">
    
		<script type="text/javascript">
			
            function gp_AffectMapTimer(){
                var t = setTimeout("gp_AffectMap()",100);
            }
            
            function gp_AffectMap(){
                try{
                    
                    // Load data from controller into JS object
                    var jsAction = {!jsActionJSON};
                    jsAction.searchType = '{!JSENCODE(searchType)}';
                    jsAction.writeBackEnabled = {!writeBackEnabled};
                    jsAction.writeBackLookupObject = '{!JSENCODE(writeBackLookupObject)}';
                    jsAction.writeBackButtonText = '{!JSENCODE(writeBackButtonText)}';
                    jsAction.searchNearbyDriveCalc = {!searchNearbyDriveCalc};
                    jsAction.searchNearbyShowOverlay = {!searchNearbyShowOverlay};
                    
                    // init objects
                    <apex:outputPanel layout="none" rendered="{!mapProvider='Google'}">
                        gp_initJSObjects();
                    </apex:outputPanel>
                    
                    // Clear the hidden data so we don't keep sending it to server
                    gp_clearHiddenFields();
                    
                    /***  MAP CONSTRUCTOR ***/
                    gp_mapConstructor(jsAction);
                    
                    /*** POINTS OF INTEREST ***/
                    if(jsAction.poiCollections){
                        gp_poiCollections(jsAction);
                    }
                                
                } catch (e) {
                    alert(e);
                    geopointeAjaxEnd();
                }
                
                geopointeAjaxEnd();
                
                // Auto run a search if necessary
                if (jsAction.mapConstructor.radialSearchAutoRun){
                    setTimeout(function(){ 
                        var dataSetController = angular.element('.dataSetController').scope();
                        dataSetController.searchType = 'nearby';
                        dataSetController.doSearch();
                    }, 500);
                
                }else if(jsAction.mapConstructor.entireDataSetAutoRun){
                    setTimeout(function(){ 
                        var dataSetController = angular.element('.dataSetController').scope();
                        dataSetController.searchType = 'all';
                        dataSetController.doSearch();
                    }, 500);
                }       
            }

            function gp_initColorPickerOnComplete(){
            	gp_initColorPicker('gp_selectedcolor','input');
                gp_initColorPicker('editDataSetColor','input');
	        }
        </script>
        
    </apex:outputPanel>
    
    
    <!-- OnLoad Stuff -->
    <script type="text/javascript">
			
            var selectedMapObject = '{!selectedEntity}'; //Keep track of the selected map object

            gp_remotes = new Object();
            gp_remotes.addToCampaign = '{!$RemoteAction.Map_Controller.addToCampaign}';
            gp_remotes.buildObjectMetaforJS = '{!$RemoteAction.Map_Controller.buildObjectMetaforJS}';
            gp_remotes.settingGeoLocation = '{!$RemoteAction.Map_Controller.settingGeoLocation}';
            gp_remotes.settingHideSidebar = '{!$RemoteAction.Map_Controller.settingHideSidebar}';
            gp_remotes.settingScrollwheelZoom = '{!$RemoteAction.Map_Controller.settingScrollwheelZoom}';
            gp_remotes.settingNumberMapPins = '{!$RemoteAction.Map_Controller.settingNumberMapPins}';
            gp_remotes.settingCloseTabsOnSearch = '{!$RemoteAction.Map_Controller.settingCloseTabsOnSearch}';
            gp_remotes.settingMapHeight = '{!$RemoteAction.Map_Controller.settingMapHeight}';
            gp_remotes.settingStartTab = '{!$RemoteAction.Map_Controller.settingStartTab}';
            gp_remotes.searchRecordsRemote = '{!$RemoteAction.Map_Controller.searchRecordsRemote}';
            gp_remotes.settingPinnedTabs = '{!$RemoteAction.Map_Controller.settingPinnedTabs}';
            gp_remotes.settingSetMapAsHome = '{!$RemoteAction.Map_Controller.settingSetMapAsHome}';
            gp_remotes.settingSetMapType = '{!$RemoteAction.Map_Controller.settingSetMapType}';
            gp_remotes.settingQuickCheckIn = '{!$RemoteAction.Map_Controller.settingQuickCheckIn}';
            gp_remotes.settingQuickCheckOut = '{!$RemoteAction.Map_Controller.settingQuickCheckOut}';
            gp_remotes.settingShareCheckInonFeed = '{!$RemoteAction.Map_Controller.settingShareCheckInonFeed}';
            gp_remotes.getRouteList = '{!$RemoteAction.Route.getRouteList}';
            gp_remotes.getRouteDetail = '{!$RemoteAction.Route.getRouteDetail}';
            gp_remotes.saveRoute = '{!$RemoteAction.Route.saveRoute}';
            gp_remotes.deleteRoute = '{!$RemoteAction.Route.deleteRoute}';
            gp_remotes.updateRouteOptions = '{!$RemoteAction.Route.updateRouteOptions}';
            gp_remotes.getGeopointeUsers = '{!$RemoteAction.Route.getGeopointeUsers}';
            gp_remotes.updateRouteOwner = '{!$RemoteAction.Route.updateRouteOwner}';
            gp_remotes.createRouteShare = '{!$RemoteAction.Route.createRouteShare}';
            gp_remotes.deleteRouteShare = '{!$RemoteAction.Route.deleteRouteShare}';
            gp_remotes.undeleteRouteShare = '{!$RemoteAction.Route.undeleteRouteShare}';
            gp_remotes.createRouteFromCalendar = '{!$RemoteAction.Route.createRouteFromCalendar}';
            gp_remotes.getDataSetList = '{!$RemoteAction.DataSet.getDataSetList}';
            gp_remotes.getDataSetDetail = '{!$RemoteAction.DataSet.getDataSetDetail}';
            gp_remotes.saveDataSet = '{!$RemoteAction.DataSet.saveDataSet}';
            gp_remotes.deleteDataSet = '{!$RemoteAction.DataSet.deleteDataSet}';
            gp_remotes.getColorByPicklistValues = '{!$RemoteAction.DataSet.getColorByPicklistValues}';
            
            jQuery(document).ready(function() {
            
                // Set the Map Height Value on the UI
                jQuery('#mySettingsMapHeight').val('{!userSettings.MapHeight__c}');

                // Set Start Tab value, remove Layers if needed
                jQuery('#mySettingsStartTab').val('{!userSettings.Map_Start_Tab__c}');
                jQuery("#mySettingsStartTab > option").each(function() {
                    if(gp_orgSettings.settings__c[nameSpacePrefix + 'Mapping_Provider__c'] == 'MapQuest' && this.value == 'layers'){
                        if (jQuery('#mySettingsStartTab').val() == 'layers') { jQuery('#mySettingsStartTab').val('datasets'); }
                        jQuery(this).remove();
                    }
                });
                
                // Reset map size if window size changes
                jQuery(window).resize(function() {
					 gp_resetMapWidth();
                     gp_setMapHeight(jQuery('#mySettingsMapHeight').val());
				});

                //Create tabs for layers
                jQuery( "#layerTabs" ).tabs();

                //Open layers tab to the last selected tab
                var lastSelectedTab = gp_getCookie('selectedLayerTab');
                if(lastSelectedTab){
                    //open demographics tab
                    jQuery('#layerTabs a[href="'+lastSelectedTab+'"]').click();
                }

                //Event listner when user switch tab inside layers lab controls
                jQuery( "#layerTabs" ).bind( "tabsshow", function(event, ui) {
                    resetMapControlOffset("#layersPanel");

                    //Reset floating headers for layers table
                    createFloatingTableHeaders('table[id$="layersTable"]','#layersFloatingHeaders');
                    
                    //Update cookie of last selected tab
                    var tabId = jQuery(ui.tab).attr('href');
                    gp_setCookie('selectedLayerTab',tabId,365); //expires in 365 days
                });
                                
               	// JavaScript Vars
                gp_MQApiKey = '{!mqAPIKey}';
                gp_baseURL = '{!baseURL}';
                
                // Init some UI elements
                gp_initColorPickerOnComplete();
                //gp_initDataTableRoute();
                
                // sforce API
                sforce.connection.sessionId = gp_userSettings.sessionId;
                sforce.connection.client = gp_orgSettings.clientId;
                gp_userSettings.apiEnabled = false;
                sforce.connection.describeGlobal({ onSuccess:function(result){
                															gp_userSettings.apiEnabled = true;
                															gp_orgSettings.descByObj = new Object();
                															gp_orgSettings.descByKeyPref = new Object();
                															jQuery.each(result.sobjects, function(key, value) { 
																				gp_orgSettings.descByObj[value.name] = value;
																				gp_orgSettings.descByKeyPref[value.keyPrefix] = value;
																			});
                															},
        											onFailure:function(error){
                                                        if(console && console.log){
                                                            console.log(error);
                                                            console.log(JSON.stringify(error));
                                                        }
                                                    }
        											});
                
               	
               	// Map Object Info
               	Visualforce.remoting.Manager.invokeAction(
					gp_remotes.buildObjectMetaforJS,
	                function(result, event){ 
	                	if (event.status) {
	                		jQuery.each(result, function(key, obj) {
		                		var metaObject = new Object();
					   			metaObject.objectLabel = jQuery.trim(obj.objectLabel);
                                metaObject.objectLablePlural = jQuery.trim(obj.objectLabelPlural);
					   			metaObject.objectName = jQuery.trim(obj.objectName);
                                metaObject.isChatter = obj.isChatter;
                                metaObject.prefix = obj.prefix;
					    		metaObject.metaFields = new Object();
					    		jQuery.each(obj.metaFields, function(key1, field) {
					    			var metaField = new Object();
					   				metaField.fieldLabel = jQuery.trim(field.fieldLabel);
					   				metaField.fieldName = jQuery.trim(field.fieldName);
					   				metaField.dataType = jQuery.trim(field.dataType);
					   				metaField.isFilterable = field.isFilterable;
					   				metaField.decimals = field.decimals;
					   				metaField.referenceTo = jQuery.trim(field.referenceTo);
					   				metaField.relationshipName = jQuery.trim(field.relationshipName);
					   				metaObject.metaFields[metaField.fieldName] = metaField;
					    		});
					    		gp_objectMeta[metaObject.objectName] = metaObject;
				    		});
				    		//gp_handleDataSetChange('{!JSENCODE(activeDataSet)}', true);
	                	}
	               	},
               	{escape:true, timeout: 120000, buffer: false});
               	
               	// Set HTML fields and define events
               	jQuery('#mySettingsUseGeolocation').attr('checked', eval('gp_userSettings.settings__c.' + gp_orgSettings.fieldPrefix + 'Use_Geolocation__c'));
               		jQuery('#mySettingsUseGeolocation').change(function(){
	               		Visualforce.remoting.Manager.invokeAction(
							gp_remotes.settingGeoLocation,
							jQuery(this).is(':checked'),
		               		function(result, event){ 
			                	if (event.status) { gp_userSettings.settings__c = result; }
		               		}, 
	               		{escape:true, timeout: 120000});
					});
               	jQuery('#mySettingsHideSidebar').attr('checked', eval('gp_userSettings.settings__c.' + gp_orgSettings.fieldPrefix + 'Hide_Sidebar__c'));
               		jQuery('#mySettingsHideSidebar').change(function(){
               			Visualforce.remoting.Manager.invokeAction(
		               		gp_remotes.settingHideSidebar, 
		               		jQuery(this).is(':checked'), 
		               		function(result, event){ 
			                	if (event.status) { gp_userSettings.settings__c = result; }
		               		}, 
	               		{escape:true, timeout: 120000});
					});
               	jQuery('#mySettingsScrollwheelZoom').attr('checked', eval('gp_userSettings.settings__c.' + gp_orgSettings.fieldPrefix + 'Use_Scrollwheel_Zoom__c'));
               		jQuery('#mySettingsScrollwheelZoom').change(function(){
               			Visualforce.remoting.Manager.invokeAction(
		               		gp_remotes.settingScrollwheelZoom,
		               		jQuery(this).is(':checked'), 
		               		function(result, event){ 
			                	if (event.status) { gp_userSettings.settings__c = result; }
			               	}, 
		               	{escape:true, timeout: 120000});
					});
               	jQuery('#mySettingsNumberPins').attr('checked', eval('gp_userSettings.settings__c.' + gp_orgSettings.fieldPrefix + 'Number_Map_Pins__c'));
               		jQuery('#mySettingsNumberPins').change(function(){
               			Visualforce.remoting.Manager.invokeAction(
		               		gp_remotes.settingNumberMapPins,
	               			jQuery(this).is(':checked'), 
	               			function(result, event){ 
			                	if (event.status) { gp_userSettings.settings__c = result; }
			               	},
		               	{escape:true, timeout: 120000});
					});

                jQuery('#mySettingsCloseTabsOnSearch').attr('checked', eval('gp_userSettings.settings__c.' + gp_orgSettings.fieldPrefix + 'Close_Tabs_on_Search__c'));
                    jQuery('#mySettingsCloseTabsOnSearch').change(function(){
                        Visualforce.remoting.Manager.invokeAction(
                            gp_remotes.settingCloseTabsOnSearch,
                            jQuery(this).is(':checked'), 
                            function(result, event){ 
                                if (event.status) { gp_userSettings.settings__c = result; }
                            },
                        {escape:true, timeout: 120000});
                    });
           		jQuery('#mySettingsMapHeight').change(function(){
           			gp_setMapHeight(jQuery(this).val());
           			Visualforce.remoting.Manager.invokeAction(
	               		gp_remotes.settingMapHeight,
	               		jQuery(this).val(),
	               		function(result, event){ 
		                	if (event.status) { gp_userSettings.settings__c = result; }
		               	},
	               	{escape:true, timeout: 120000});
				});
                


                jQuery('#mySettingsQuickCheckIn').attr('checked', eval('gp_userSettings.settings__c.' + gp_orgSettings.fieldPrefix + 'Quick_Check_In__c'));
                    jQuery('#mySettingsQuickCheckIn').change(function(){
                        Visualforce.remoting.Manager.invokeAction(
                            gp_remotes.settingQuickCheckIn,
                            jQuery(this).is(':checked'), 
                            function(result, event){ 
                                if (event.status) { gp_userSettings.settings__c = result; }
                            },
                        {escape:true, timeout: 120000});
                    });
                jQuery('#mySettingsQuickCheckOut').attr('checked', eval('gp_userSettings.settings__c.' + gp_orgSettings.fieldPrefix + 'Quick_Check_Out__c'));
                    jQuery('#mySettingsQuickCheckOut').change(function(){
                        Visualforce.remoting.Manager.invokeAction(
                            gp_remotes.settingQuickCheckOut,
                            jQuery(this).is(':checked'), 
                            function(result, event){ 
                                if (event.status) { gp_userSettings.settings__c = result; }
                            },
                        {escape:true, timeout: 120000});
                    });
                jQuery('#mySettingsCheckInShareOnFeed').attr('checked', eval('gp_userSettings.settings__c.' + gp_orgSettings.fieldPrefix + 'Share_Check_In_on_Feed__c'));
                    jQuery('#mySettingsCheckInShareOnFeed').change(function(){
                        Visualforce.remoting.Manager.invokeAction(
                            gp_remotes.settingShareCheckInonFeed,
                            jQuery(this).is(':checked'), 
                            function(result, event){ 
                                if (event.status) { gp_userSettings.settings__c = result; }
                            },
                        {escape:true, timeout: 120000});
                    });
					
				//Update start tab
				jQuery("#mySettingsStartTab").change(function(){
					Visualforce.remoting.Manager.invokeAction(
	               		gp_remotes.settingStartTab,
	               		jQuery(this).find( "option:selected" ).val(),
	               		function(result, event){ 
		                	if (event.status) { gp_userSettings.settings__c = result; }
		               	},
	               	{escape:true, timeout: 120000});
				});	

                //Populate the sticktab checkboxes.
                var pinnedTabs = '{!userSettings.Pinned_Tabs__c}';
                jQuery("#pinnedTabsTable input").each(function(){
                    if(pinnedTabs.indexOf(  jQuery(this).val()     ) > -1){
                        jQuery(this).prop('checked', true);
                    }
                });

                //Event listener to update pinned tabs
                jQuery("#pinnedTabsTable input").click(function(){
                    var pinnedTabs = '';

                    jQuery("#pinnedTabsTable input").each(function(){
                        if(jQuery(this).is(':checked')){
                            pinnedTabs += jQuery(this).val() + ','
                        }
                    });

                    Visualforce.remoting.Manager.invokeAction(gp_remotes.settingPinnedTabs,pinnedTabs,function(result, event){ 
                        if (event.status) { 
                            gp_userSettings.settings__c = result; 

                            //If legend tab is visible make sure it stays as a 'pinned' tab
                            if(jQuery("#legendControlTab").is(":visible")){
                                gp_userSettings.settings__c[nameSpacePrefix + 'Pinned_Tabs__c'] += 'legendPanel,';       
                            }
                        }
                    },{escape:true, timeout: 120000});
                });
				
                var startLat = eval('gp_userSettings.settings__c.' + gp_orgSettings.fieldPrefix + 'Starting_Lat__c');
                var startLng = eval('gp_userSettings.settings__c.' + gp_orgSettings.fieldPrefix + 'Starting_Lng__c');
                var startZoom = eval('gp_userSettings.settings__c.' + gp_orgSettings.fieldPrefix + 'Starting_Zoom__c');
				if(typeof(startLat) != "undefined") {jQuery('#mySettingsStartingLatitude').html(startLat.toFixed(4));}
                if(typeof(startLng) != "undefined") {jQuery('#mySettingsStartingLongitude').html(startLng.toFixed(4));}
                if(typeof(startZoom) != "undefined") {jQuery('#mySettingsStartingZoom').html(startZoom);}
                	jQuery('#mySettingsSetMapAsHome').click(function(){
						geopointeAjaxStart('body',gp_translations.Saving_Settings+'...');
						
                        var lat = gp_getCenterObject().lat;
                        var lng = gp_getCenterObject().lng;

                        //Make sure lat and lng are valid values before saving
                        if(lat > 90.0 || lat < -90.0 || lng > 180.0 || lng < -180.0){
                            alert('{!$Label.Unable_to_set_starting_map_position}');
                            geopointeAjaxEnd();
                            return false;
                        }

                        Visualforce.remoting.Manager.invokeAction(
							gp_remotes.settingSetMapAsHome,
							lat, lng, gp_getZoomLevel(), 
							function(result, event){ 
			                	if (event.status) { 
			                		gp_userSettings.settings__c = result;
			                		jQuery('#mySettingsStartingLatitude').html(eval('gp_userSettings.settings__c.' + gp_orgSettings.fieldPrefix + 'Starting_Lat__c').toFixed(4));
									jQuery('#mySettingsStartingLongitude').html(eval('gp_userSettings.settings__c.' + gp_orgSettings.fieldPrefix + 'Starting_Lng__c').toFixed(4));
									jQuery('#mySettingsStartingZoom').html(eval('gp_userSettings.settings__c.' + gp_orgSettings.fieldPrefix + 'Starting_Zoom__c'));
		                		}
		                		geopointeAjaxEnd();
			               	},
		               	{escape:true, timeout: 120000});
					});
               	if(eval('gp_orgSettings.settings__c.' + gp_orgSettings.fieldPrefix + 'Mapping_Provider__c') == 'Google') { 
               		if(typeof(google.maps.visualization.DemographicsLayer)=="undefined"){ 
               			jQuery('#gp_demoDIV').html('<p style="width:300px; font-size:9pt;">Demographics are only available when using Geopointe&apos;s Google Maps Premier license. This license is not used in Sandbox systems.</p>');
               			jQuery('#gp_hoverhelpContent #gp_hoverhelp_Demographics').html('Demographics are not available');
               		} else {
               			gp_initDemoControls();
              			}
              		}
              		jQuery("#gp_addKMLLayer").click(function () {
			    	var url = jQuery('#gp_KMLURL').val().trim();
			    	if(url!=''){
				    	var kml = new google.maps.KmlLayer(url, {map:gp_map});
				    	gp_kmlOverlays[url + '_overlay'] = kml;
			    	}
				});
               	
                // jQuery tabs
                if(eval('gp_orgSettings.settings__c.' + gp_orgSettings.fieldPrefix + 'Mapping_Provider__c') == 'MapQuest') { jQuery( "#theTabPanel" ).tabs("remove",gp_JQTabs["layers"]); }
                
                // jGrowl
                jQuery.jGrowl.defaults.sticky = false;
                jQuery.jGrowl.defaults.closer = true;
                jQuery.jGrowl.defaults.glue = 'after';
                jQuery.jGrowl.defaults.position = 'center';
                jQuery.jGrowl.defaults.check = 500;
                jQuery.jGrowl.defaults.life = 3000;
                jQuery.jGrowl.defaults.theme = '';
                jQuery.jGrowl.defaults.themeState = '';
                jQuery.jGrowl.defaults.beforeOpen = function(e,m,o) { jQuery(e).removeClass('ui-state-highlight ui-corner-all'); };
                
                // jQuery Tooltip handler
                jQuery(".gp_hoverhelp").tooltip({
					track: false,
					delay: 250,
					top: 5, 
					showURL: false,
					bodyHandler: function() {
						if(typeof(gp_tooltips[this.id])=="undefined"){
							gp_tooltips[this.id] = jQuery('#gp_hoverhelpContent #' + this.id).html();
						}
						return gp_tooltips[this.id];
					} 
				});
              		
          		// Run the map
          		gp_AffectMapTimer();
              									
                // Custom JS Inject
			    if({!mapInjectJS}){
			    	var elem = document.createElement('script');
					elem.type='text/javascript';
					elem.src='{!mapInjectJSPath}';
					document.body.appendChild(elem);
			    }
			    
			    //Create field picker functionality for adding filters
			    createFieldSelectors();
				
				//Event listner to update JSON field if filter value is changed
				jQuery("body").on("change",".dataFilterTable .filterValue",function(){
					populateFilterJSON();
				});
				
				//Call this last as there may be other methods that adjust the height of the map controls on load
				//resetMapControlOffset('.mapControl');
            });
            
		function rerenderComplete(){
			//Visualforce rerenders like to break event binds so re-attach necessary js functionality
			geopointeAjaxEnd();
			createFieldSelectors();
		}
		
		function createFieldSelectors(){
            //Create event listener for adding dataset field
            jQuery("#addDataSetField").fieldSelector({
                isFilter : false,
                showAll: false,
                onSelect: function(field){
                    
                    //Check to make sure field is not already selected
                    var alreadySelected = false;
                    var dataSetController = angular.element('.dataSetController').scope();
                    
                    for(var i = 0; i < dataSetController.selectedDataSet.fields.length; i++){
                        var existingField = dataSetController.selectedDataSet.fields[i];

                        if( existingField.field.toLowerCase() == field.fullAPIName.toLowerCase() ){
                            alert('{!$Label.This_field_has_already_been_selected}');
                            alreadySelected = true;
                            return false; //exit the .each() loop
                        }
                    }
                    
                    if(alreadySelected == false){
                        //Add field to selectedDataSet
                        dataSetController.selectedDataSet.fields.push({
                            field: field.fullAPIName.toLowerCase(),
                            path: field.objectName.toLowerCase(),
                            order: dataSetController.selectedDataSet.fields.length + 1
                        });
                        dataSetController.$apply();

                    }else{
                        //Field was already selected keep the fieldselector box open by returning false
                        return false;
                    }
                },
                startObject: function(e){
                    return angular.element('.dataSetController').scope().selectedDataSet.mapObjectName;
                },
                getFieldsForObjectRemoteMethod: '{!$RemoteAction.FieldSelector.getFieldsForObject}',
                getChildObjectsRemoteMethod: '{!$RemoteAction.FieldSelector.getChildObjects}',
                getPicklistValuesRemoteMethod: '{!$RemoteAction.FieldSelector.getPickListValues}'
            });

            //To change the color by field
            jQuery("#colorByField").fieldSelector({
                isFilter : false,
                showAll: false,
                onSelect: function(field){
                    //Get the angular controller
                    var dataSetController = angular.element('.dataSetController').scope();

                    var proceed = true;

                    if(dataSetController.selectedDataSet.markerRules && dataSetController.selectedDataSet.markerRules.length > 0){
                        proceed = confirm('This will remove the existing marker color rules.\n\nContinue?');
                    }

                    if(proceed){
                        //Update the color by field on the selected data set
                        dataSetController.selectedDataSet.colorByField = {
                            field: field.fullAPIName,
                            type: field.type,
                            label: field.label,
                            scale: field.scale
                        };

                        //Create default rules
                        dataSetController.createDefaultMarkerRules();

                        //Update angular controller so DOM updates
                        dataSetController.$apply();
                    }
                },
                startObject: function(e){
                    return angular.element('.dataSetController').scope().selectedDataSet.mapObjectName;
                },
                getFieldsForObjectRemoteMethod: '{!$RemoteAction.FieldSelector.getFieldsForObject}',
                getChildObjectsRemoteMethod: '{!$RemoteAction.FieldSelector.getChildObjects}',
                getPicklistValuesRemoteMethod: '{!$RemoteAction.FieldSelector.getPickListValues}'
            });

            //Create event listener for adding an field filter
			jQuery("#addFieldFilter").fieldSelector({
				isFilter: true,
				showAll: false,
				onSelect: function(field){

                    //Get the angular controller
                    var dataSetController = angular.element('.dataSetController').scope();

                    //Add field filter
                    dataSetController.selectedDataSet.fieldFilters.push({
                        fieldName: field.fullAPIName,
                        fieldType: field.type,
                        filterValue: field.filterValue,
                        operator: field.operator,
                        sObjectName: field.objectName,
                        order: dataSetController.selectedDataSet.fieldFilters.length + 1
                    });

                    //Update angular controller so DOM updates
                    dataSetController.$apply();
				},
				startObject: function(e){
                    return angular.element('.dataSetController').scope().selectedDataSet.mapObjectName;
				},
				getFieldsForObjectRemoteMethod: '{!$RemoteAction.FieldSelector.getFieldsForObject}',
				getChildObjectsRemoteMethod: '{!$RemoteAction.FieldSelector.getChildObjects}',
				getPicklistValuesRemoteMethod: '{!$RemoteAction.FieldSelector.getPickListValues}'
			});

            //Adding a field filter to a child object cross filter
            jQuery(".addChildFieldFilter").fieldSelector({
                isFilter: true,
                isChildFilter: true,
                showAll: false,
                onSelect: function(field){

                    //Get the angular controller
                    var dataSetController = angular.element('.dataSetController').scope();

                    //Add child filter
                    dataSetController.selectedDataSet.childFilters[jQuery(this).attr('data-childFilterIndex')].fieldFilters.push({
                        childField: field.childFieldName,
                        childRelationshipName: field.relationshipName,
                        childSObjectName: field.objectName,
                        fieldName: field.fullAPIName,
                        fieldType: field.type,
                        filterValue: field.filterValue,
                        operator: field.operator,
                        sObjectName: field.objectName
                    });

                    //Update angular controller so DOM updates
                    dataSetController.$apply();

                },
                startObject: function(element){
                    return angular.element('.dataSetController').scope().selectedDataSet.mapObjectName;
                },
                selectedChildObject: function(element){
                    return jQuery(element).attr('data-startObject');
                },
                getFieldsForObjectRemoteMethod: '{!$RemoteAction.FieldSelector.getFieldsForObject}',
                getChildObjectsRemoteMethod: '{!$RemoteAction.FieldSelector.getChildObjects}',
                getPicklistValuesRemoteMethod: '{!$RemoteAction.FieldSelector.getPickListValues}'
            });

		}
    </script>

    <!-- Override Salesforce's setFocusOnLoad method -->
    <script type="text/javascript">
        function setFocusOnLoad() {}
    </script>
    	
    <!-- Empty area to re-render in the event I am forced to rerender something -->
    <apex:outputPanel id="rerenderNothing"/>

</apex:component>